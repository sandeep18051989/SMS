@model SMS.Models.FeedbackModel
@using EF.Services.Http;
@{
    var urlHelperService = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>();
    var basePath = urlHelperService.GetLocation(false);
}
<div class="tcd-title tcd-title-center mb50">
    <h2>Contact With <span>Me!</span></h2>
    <p>Feel free to contact for any service given above.</p>
</div>
<div class="contact-form right-side">
    <div id="formMessages"></div>
    <form id="contactForm" class="contactForm query-form-home">
        <div class="row">
            <div class="col-md-12">
                <div style="display: none;" class="alert alert-success" role="alert" id="success_message">
                    Success <i class="fa fa-thumbs-up"></i>&nbsp;&nbsp;Thanks for contacting us, we will get back to you shortly.
                </div>
                <div style="display: none;" class="alert alert-danger" role="alert" id="error_message">
                    Error <i class="fa fa-thumbs-down"></i> &nbsp;&nbsp;<span id="errortxt"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-field">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your name", @tabindex = "1", @maxlength = "100" } })
                    <span class="validation" style="color: red; display: none;" id="nameError">&nbsp;&nbsp;Please enter name</span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-field">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Emailaddress", @type = "Email", @tabindex = "2", @maxlength = "200" } })
                    <span class="validation" style="color: red; display: none;" id="emailError">&nbsp;&nbsp;Invalid email address</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-field">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your Location", @tabindex = "3", @maxlength = "200" } })
                    <span class="validation" style="color: red; display: none;" id="locError">&nbsp;&nbsp;Please enter location</span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-field">
                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @placeholder = "Your contact number", @tabindex = "4", @onkeypress = "return checkNumber(event);", @maxlength = "10" } })
                    <span class="validation" style="color: red; display: none;" id="contactError">&nbsp;&nbsp;Please enter contact</span>
                </div>
            </div>
        </div>
        <div class="form-field">
            @Html.TextAreaFor(model => model.Description, 3, 1, new { @class = "form-control", @placeholder = "Your Comments", @tabindex = "5", @maxlength = "500" })
            <span class="validation" style="color: red; display: none;" id="commentError">&nbsp;&nbsp;Please enter comments</span>
        </div>
        <div class="form-button">
            <button type="button" tabindex="10" class="readon" id="btnSend">Send <span class="fa fa-send"></span></button>
        </div>
        <script type="text/javascript">
            $(document).ready(function () {
                $(document).on("click",
                    "#btnSend",
                    function (e) {
                        e.preventDefault();
                        if (ValidateFields()) {
                            $.ajax({
                                url: '@Url.Action("Query", "Feedback")',
                                type: "POST",
                                cache: false,
                                async: true,
                                context: this,
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                data: JSON.stringify({
                                    "name": $("#@Html.IdFor(model => model.FullName)").val(),
                                    "description": $("#@Html.IdFor(model => model.Description)").val(),
                                    "email": $("#@Html.IdFor(model => model.Email)").val(),
                                    "contact": $("#@Html.IdFor(model => model.Contact)").val(),
                                    "location": $("#@Html.IdFor(model => model.Location)").val()
                                }),
                                success: function (result) {
                                    if (result.Success === "True") {
                                        $("#nameError").hide();
                                        $("#locError").hide();
                                        $("#emailError").hide();
                                        $("#contactError").hide();
                                        $("#commentError").hide();
                                        setTimeout(function () {
                                            $.gritter.add({
                                                title: "Success",
                                                text: "Your query/feedback/complaints valuable to us. We will be get back shortly.",
                                                sticky: !0,
                                                time: "",
                                                class_name: "my-sticky-class"
                                            });
                                        }, 1e3);
                                    } else {
                                        setTimeout(function () {
                                            $.gritter.add({
                                                title: "Failure",
                                                text: "Error sending request, You can reach us using our contact numbers.",
                                                sticky: !0,
                                                time: "",
                                                class_name: "my-sticky-class"
                                            });
                                        }, 1e3);
                                    }
                                },
                                error: function (xhr, ajaxOptions, errorThrown) {
                                    setTimeout(function () {
                                        $.gritter.add({
                                            title: "Failure",
                                            text: xhr.responseText,
                                            sticky: !0,
                                            time: "",
                                            class_name: "my-sticky-class"
                                        });
                                    }, 1e3);
                                }
                            });
                        }
                    });
                return false;
            });

            function ValidateFields() {
                if ($("#@Html.IdFor(model => model.FullName)").val() === "") {
                    $("#nameError").show();
                    $("#locError").hide();
                    $("#emailError").hide();
                    $("#contactError").hide();
                    $("#commentError").hide();
                    return false;
                } else if ($("#@Html.IdFor(model => model.Location)").val() === "") {
                    $("#locError").show();
                    $("#nameError").hide();
                    $("#emailError").hide();
                    $("#contactError").hide();
                    $("#commentError").hide();
                    return false;
                } else if ($("#@Html.IdFor(model => model.Email)").val() === "" ||
                    !isValidEmailAddress($("#@Html.IdFor(model => model.Email)").val())) {
                    $("#emailError").show();
                    $("#locError").hide();
                    $("#nameError").hide();
                    $("#contactError").hide();
                    $("#commentError").hide();
                    return false;
                } else if ($("#@Html.IdFor(model => model.Contact)").val() === "") {
                    $("#contactError").show();
                    $("#locError").hide();
                    $("#nameError").hide();
                    $("#emailError").hide();
                    $("#commentError").hide();
                    return false;
                } else if ($("#@Html.IdFor(model => model.Description)").val().length === 0) {
                    $("#commentError").show();
                    $("#locError").hide();
                    $("#nameError").hide();
                    $("#emailError").hide();
                    $("#commentError").hide();
                    return false;
                } else {
                    $("#nameError").hide();
                    $("#emailError").hide();
                    $("#contactError").hide();
                    $("#commentError").hide();
                    $("#locError").hide();
                    return true;
                }
            }

        </script>

    </form>
</div>
