@model SMS.Models.UserInfoModel
@using System.Web.Mvc;
@using EF.Services.Http;
@using EF.Services.Service;
@{
	ViewBag.Title = Model.FirstName + " " + Model.LastName;
	Layout = "~/Views/Shared/_InnerLayout.cshtml";

	var basePath = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>().GetLocation(false);
	var pictureService = EF.Core.ContextHelper.Current.Resolve<IPictureService>();
	var userService = EF.Core.ContextHelper.Current.Resolve<IUserService>();
	var avtarpicture = basePath + "Content/images/avatarnotfound.png";
	var coverpicture = "http://www.bootdey.com/img/Content/flores-amarillas-wallpaper.jpeg";
	if (Model.CoverPictureId > 0)
	{
		coverpicture = pictureService.GetPictureById(Model.CoverPictureId).PictureSrc;
	}
	if (Model.ProfilePictureId > 0)
	{
		avtarpicture = pictureService.GetPictureById(Model.ProfilePictureId).PictureSrc;
	}
}
<div class="item-container main-content">
	<div class="row">
		<div class="col-md-12 register-form">
			@Html.ValidationSummary(false)
			@using (Html.BeginForm())
			{
				@Html.AntiForgeryToken()
				@Html.HiddenFor(model => model.Id)
				<div class="row-fluid">
					<div class="col-md-12 text-center no-padding">
						<div class="panel panel-default">
							<div class="userprofile social" style="background:url(@coverpicture) no-repeat 50% 5%;background-size:100%;">
								<div class="userpic"><img src="@avtarpicture" alt="@(Model.FirstName + " " + Model.LastName)" class="userpicimg"> </div>
								<h3 class="username">@(Model.FirstName + " " + Model.LastName)</h3>
								<p>@Model.AddressLine2</p>
								<div class="socials tex-center">
									<a href="@Model.FacebookLink" class="btn btn-circle btn-primary ">
										<i class="fa fa-facebook"></i>
									</a> <a href="@Model.GooglePlusLink" class="btn btn-circle btn-danger ">
										<i class="fa fa-google-plus"></i>
									</a> <a href="@Model.TweeterLink" class="btn btn-circle btn-info ">
										<i class="fa fa-twitter"></i>
									</a> <a href="" class="btn btn-circle btn-warning "><i class="fa fa-envelope"></i></a>
								</div>
							</div>
							<div class="col-md-12 border-top border-bottom edit-section">
								<ul class="nav nav-pills pull-left countlist" role="tablist">
									<li role="presentation">
										<h3>
											@Model.EventsUploadedList.Count<br>
											<small>Events</small>
										</h3>
									</li>
									<li role="presentation">
										<h3>
											@Model.ProductsUploadedList.Count<br>
											<small>Products</small>
										</h3>
									</li>
									<li role="presentation">
										<h3>
											@Model.CommentsList.Count<br>
											<small>Comments</small>
										</h3>
									</li>
								</ul>
								<a href="@Url.Action("EditMyAccount","Account", new { id = Model.user.Id })" class="btn btn-primary followbtn">Edit Profile</a>
							</div>
							<div class="clearfix"></div>
						</div>
					</div>
					<!-- /.col-md-12 -->
					<div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 panel-group pull-right">
						<!--Panel-->
						<div class="panel panel-info">
							<div class="panel-heading">
								Your Products
							</div>
							<div class="panel-body">
								@if (Model.ProductsUploadedList.Count > 0)
								{
									foreach (var product in Model.ProductsUploadedList)
									{
										<div class="pro-img-wrap"><img src="@product.Pictures.Select(x=>x.PictureSrc).FirstOrDefault()" class="productname" alt="@product.Name"><div class="pro-overlay"></div><span class="pro-name-toggle"><a href="@(basePath + "product/detail/" + product.Url)" title="@product.Name">@product.Name</a></span></div>
									}
								}
								else
								{
									<div class="no-image-wrap">No Products</div>
								}
							</div>
						</div>
						<div class="divider"></div>
						<div class="panel panel-info">
							<div class="panel-heading">
								Your Events
							</div>
							<div class="panel-body">
								<ul class="list-group event-list">
									@if (Model.EventsUploadedList.Count > 0)
									{
										foreach (var _event in Model.EventsUploadedList)
										{
											<li class="list-group-item">
												<b><i class="fa fa-fire"></i> @_event.Title</b><br />
												<div class="eve-dates"><i class="fa fa-calendar-check-o" aria-hidden="true"></i> @_event.StartDate.Date.ToShortDateString()<span class="add-on">&nbsp;TO&nbsp;</span>@_event.EndDate.Date.ToShortDateString()</div>
											</li>
										}
									}
									else
									{
										<li class="list-group-item">No Events Found</li>
									}
								</ul>
							</div>
						</div>
						<div class="divider"></div>
						<div class="panel panel-info">
							<div class="panel-heading">
								Comments
							</div>
							<div class="panel-body">
								@if (Model.CommentsList.Count > 0)
				{
					foreach (var comment in Model.CommentsList)
					{
						var user = userService.GetUserById(comment.UserId);
						var userinfo = userInfoService.GetUserInformationByUserId(comment.UserId);
										<div class="media">
											<div class="media-left"><a href="javascript:void(0);"><img src="@(userinfo != null ? pictureService.GetPictureById(userinfo.ProfilePictureId).PictureSrc : "~\\Content\\images\\avatarnotfound.png")" alt="@(userinfo != null ? userinfo.FirstName : "")" class="media-object"></a></div>
											<div class="media-body comment-body">
												<h4 class="media-heading">@(user != null ? user.UserName : "Guest")&nbsp;<span class="pull-right comment-date">@comment.CreatedOn.Date.ToShortDateString()</span></h4>
												@Html.Raw(comment.CommentHtml)
											</div>
										</div>
					}
				}
				else
				{
									<div class="media">
										<div class="media-body">
											No Comments
										</div>
									</div>

				}
							</div>
						</div>
						<div class="divider"></div>
						<div class="panel panel-info">
							<div class="panel-heading">
								Your Recent Activities
							</div>
							<div class="col-md-12">
								<ul class="list-group act-list-user">
									@if (Model.Activities.Count > 0)
									{
										foreach (var activity in Model.Activities)
										{
											foreach (var log in activity.LogDetails)
											{
												if (String.IsNullOrEmpty(log.OriginalValue))
												{
													<li class="list-group-item act-list-item add-item">
														<span class="fa fa-plus"></span> <text>Created</text> @activity.TypeFullName.Substring(activity.TypeFullName.LastIndexOf('.') + 1) <text>&nbsp;-&nbsp;</text><a href="javascript:void(0);" title="@activity.EntityName">@activity.EntityName</a><text> on </text> @activity.EventDateUTC.Date.ToShortDateString()
													</li>

												}
												else
												{
													<li class="list-group-item act-list-item update-item">
														<span class="fa fa-minus"></span> <text>Updated</text> @activity.TypeFullName.Substring(activity.TypeFullName.LastIndexOf('.') + 1) <text>&nbsp;-&nbsp;</text><a href="javascript:void(0);" title="@activity.EntityName">@activity.EntityName</a><text> on </text> @activity.EventDateUTC.Date.ToShortDateString()
													</li>
												}
											}
										}
									}
									else
									{
										<li class="list-group-item">No Activities Found</li>
									}
								</ul>
							</div>
							<div class="clearfix"></div>
						</div>
					</div>
					<div class="col-md-8 col-sm-12 pull-left posttimeline">
						<div class="panel panel-info">
							<div class="panel-heading">
								Personal Details
							</div>
							<div class="col-md-12 panel-body commentsblock border-top">
								<div class="form-body">
									<div class="form-horizontal">
										<div class="form-group">
											@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.FirstName)
											</div>
										</div>

										<div class="form-group">
											@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.LastName)
											</div>
										</div>

										<div class="form-group">
											@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.Phone)
											</div>
										</div>

										<div class="form-group">
											@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.Email)
											</div>
										</div>

										<div class="form-group">
											@Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.AddressLine1)
											</div>
										</div>

										<div class="form-group">
											@Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.AddressLine2)
											</div>
										</div>

										<div class="form-group">
											@Html.LabelFor(model => model.BriefIntroduction, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.BriefIntroduction)
											</div>
										</div>

										<div class="form-group">
											@Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
											<div class="col-md-4">
												@Html.DisplayFor(model => model.Hobbies)
											</div>
										</div>
									</div>

								</div>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	</div>
</div>