@model SMS.Models.DivisionExamModel
@using EF.Services;
@using System.Web.Optimization;
@{
    ViewBag.Title = "Assign Exam To Division";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">Assign Exams To Division</h3>
    </div>
    <div class="col-md-7 align-self-center">
        @Html.Raw(Html.BuildBreadcrumbNavigation())
    </div>
</div>
<div class="row">
    <div class="col-md-12 mr-4">
        <section class="edit-form">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                @Scripts.Render("~/Scripts/daterangepicker")
                @Styles.Render("~/Content/daterangepicker")
                <div class="row">
                    <div id="admin-page-header" class="col-xs-12 col-md-12">
                        <button type="submit" name="save" class="btn btn-primary mr-auto">
                            <i class="fa fa-save">&nbsp;&nbsp;</i>Save
                        </button>&nbsp;&nbsp;
                        <button type="submit" value="Create" name="save-continue" class="btn btn-primary mr-auto">
                            <i class="fa fa-save">&nbsp;&nbsp;</i>Save & Continue
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 my-3">
                        <div class="tabs-wrapper">
                            <ul class="nav classic-tabs tabs-pink" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link waves-light active waves-effect waves-light" data-toggle="tab" href="#update-exam" role="tab">
                                        <i class="fa fa-user fa-2x" aria-hidden="true"></i>
                                        <br> Assign Exam
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="tab-content card">
                            <div class="tab-pane fade in show active" id="update-exam" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-12">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row text-left">
                                    <div class="col-md-12 mb-4">
                                        <h4 class="section-heading">Class-Division</h4>
                                        <table class="table display table-bordered text-nowrap dataTable">
                                            <thead>
                                                <tr>
                                                    <th class="text-center">Class</th>
                                                    <th class="text-center">Division</th>
                                                    <th class="text-center">Class Room</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td class="text-center">
                                                        @Model.Class
                                                    </td>
                                                    <td class="text-center">
                                                        @Model.Division
                                                    </td>
                                                    <td class="text-center">
                                                        @Model.ClassRoom
                                                    </td>
                                                </tr>
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <td colspan="3"></td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                                <div class="row text-left">
                                    <div class="col-md-12 mb-4">
                                        <h4 class="section-heading">Division-Exams</h4>
                                        <table id="divison-exams-grid" class="table display table-bordered text-nowrap dataTable">
                                            <thead>
                                                <tr>
                                                    <th class="text-center">Exam</th>
                                                    <th class="text-center">Passing Marks</th>
                                                    <th class="text-center">Total Marks</th>
                                                    <th class="text-center">Start Date</th>
                                                    <th class="text-center">End Date</th>
                                                    <th class="text-center">Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <h4 class="section-heading">Assign Exam To Division</h4>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.DropDownListFor(model => model.ExamId, Model.AvailableExams, "Select Exam", new { @class = "mdb-select", @tabindex = "1", @title = "Exam" })
                                                    @Html.LabelFor(model => model.ExamId, "Exam", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.ExamId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.DropDownListFor(model => model.ClassRoomId, Model.AvailableClassRooms, "Select Class Room", new { @class = "mdb-select", @tabindex = "2", @title = "Class Room" })
                                                    @Html.LabelFor(model => model.ClassRoomId, "Classroom", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.ClassRoomId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.DropDownListFor(model => model.AcadmicYearId, Model.AvailableAcadmicYears, new { @class = "mdb-select", @tabindex = "3", @title = "Acadmic Year" })
                                                    @Html.LabelFor(model => model.EndTime, "Acadmic Year", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.ExamId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form date start-date">
                                                    <i class="fa fa-calendar prefix"></i>
                                                    @Html.EditorFor(model => model.StartDate, "DateRange.cshtml")
                                                    @Html.LabelFor(model => model.StartDate, "Start Date", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form date end-date">
                                                    <i class="fa fa-calendar prefix"></i>
                                                    @Html.EditorFor(model => model.EndDate, "DateRange.cshtml")
                                                    @Html.LabelFor(model => model.EndDate, "End Date", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form date start-time">
                                                    <i class="fa fa-clock-o prefix"></i>
                                                    @Html.EditorFor(model => model.StartTime, "MDTimePicker.cshtml")
                                                    @Html.LabelFor(model => model.StartTime, "Start Time", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form date end-time">
                                                    <i class="fa fa-clock-o prefix"></i>
                                                    @Html.EditorFor(model => model.EndTime, "MDTimePicker.cshtml")
                                                    @Html.LabelFor(model => model.EndTime, "End Time", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.EditorFor(model => model.PassingMarks, new { htmlAttributes = new { @class = "form-control", @tabindex = "8", @min = "1", @maxlength = "10", @type = "number" } })
                                                    @Html.LabelFor(model => model.PassingMarks, "Passing Marks", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.PassingMarks, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.EditorFor(model => model.MaxMarks, new { htmlAttributes = new { @class = "form-control", @tabindex = "9", @min = "1", @maxlength = "10", @type = "number" } })
                                                    @Html.LabelFor(model => model.MaxMarks, "Maximum Marks", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.MaxMarks, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.DropDownListFor(model => model.ResultStatusId, Model.AvailableResultStatuses, "Select Result Status", new { @class = "mdb-select", @tabindex = "11", @title = "Result Status" })
                                                    @Html.LabelFor(model => model.ResultStatusId, "Result Status", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.ResultStatusId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.DropDownListFor(model => model.GradeSystemId, Model.AvailableGradeSystem, "Select Grade System", new { @class = "mdb-select", @tabindex = "12", @title = "Class Exam" })
                                                    @Html.LabelFor(model => model.GradeSystemId, "Grade System", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.GradeSystemId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 mb-4">
                                                <input type="checkbox" tabindex="13" id="BreakAllowed" name="BreakAllowed" value="@(Model.BreakAllowed ? "True" : "False")" @(Model.BreakAllowed ? "checked=checked" : "") />
                                                @Html.LabelFor(model => model.BreakAllowed, "Break Allowed", htmlAttributes: new { })
                                                @Html.ValidationMessageFor(model => model.BreakAllowed, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    <i class="fa fa-clock-o prefix"></i>
                                                    @Html.TextBoxFor(model => model.BreakTime, new { @class = "form-control", @autocomplete = "off", @placeholder = "", @tabindex = "14" })
                                                    @Html.LabelFor(model => model.BreakTime, htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.BreakTime, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("li#exams ul").css("height", "");
        // Initiallize Datatable
        $('#divison-exams-grid').DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 25,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            "ajax": {
                "url": "/Admin/Exam/LoadDivisionExamGrid/" + $("#Id").val(),
                "type": "POST",
                "datatype": "json"
            },
            "aaSorting": [],
            "columns": [
                {
                    "data": "ExamName", "title": "Exam", "Exam": "Title", "autoWidth": true, "defaultContent": "", "className": "text-center",
                },
                {
                    "data": "PassingMarks", "title": "Passing Marks", "name": "Passing Marks", "autoWidth": true, "orderable": false, "defaultContent": "", "className": "text-center",
                },
                {
                    "data": "TotalMarks", "title": "Total Marks", "name": "Total Marks", "autoWidth": true, "orderable": false, "defaultContent": "", "className": "text-center",
                },
                {
                    "data": "StringStartDate", "title": "Start Date", "name": "Start Date", "autoWidth": true, "orderable": false, "defaultContent": "", "className": "text-center"
                },
                {
                    "data": "StringEndDate", "title": "End Date", "name": "End Date", "autoWidth": true, "orderable": false, "defaultContent": "", "className": "text-center"
                },
                {
                    "title": "Actions",
                    "orderable": false,
                    "className": 'text-center',
                    "render": function (data, type, row) {
                        if (type === "display") {
                            return '<a href="/Admin/Exam/EditDivisionExam?id=' + row.Id + '" id="edit_' + row.Id + '" title="Edit"><i class="fa fa-2x fa-pencil-square-o" aria-hidden="true"></i></a>';
                        }
                        return data;
                    },
                    "defaultContent": ""
                }
            ],
            "select": {
                "style": 'os',
                "selector": 'td:first-child'
            }
        });


        if ($("#BreakAllowed").val() == "True") {
            $("#BreakAllowed").attr('checked', true).val(true);
        }
        else {
            $("#BreakAllowed").attr('checked', false).val(false);
        }

        $("#BreakAllowed").change(function () {
            if ($(this).prop('checked')) {
                $(this).attr('checked', true).val(true);
            }
            else {
                $(this).attr('checked', false).val(false);
            }
        });

        // Get the elements
        var from_input = $('.start-date input[type=text]').pickadate(),
			from_picker = from_input.pickadate('picker');
        var to_input = $('.end-date input[type=text]').pickadate(),
			to_picker = to_input.pickadate('picker');

        // Check if there’s a “from” or “to” date to start with and if so, set their appropriate properties.
        if (from_picker.get('value')) {
            to_picker.set('min', from_picker.get('select'));
        }
        if (to_picker.get('value')) {
            from_picker.set('max', to_picker.get('select'));
        }

        // Apply event listeners in case of setting new “from” / “to” limits to have them update on the other end. If ‘clear’ button is pressed, reset the value.
        from_picker.on('set',
			function (event) {
			    if (event.select) {
			        to_picker.set('min', from_picker.get('select'));
			    } else if ('clear' in event) {
			        to_picker.set('min', false);
			    }
			});
        to_picker.on('set',
			function (event) {
			    if (event.select) {
			        from_picker.set('max', to_picker.get('select'));
			    } else if ('clear' in event) {
			        from_picker.set('max', false);
			    }
			});
    });
</script>
