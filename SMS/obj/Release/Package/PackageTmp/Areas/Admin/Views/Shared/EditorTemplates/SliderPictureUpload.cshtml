@model int
@using System.Web.Mvc;
@using EF.Services.Http;
@using EF.Services.Service;
@{
//register CSS and JS
	<link rel="stylesheet" type="text/css" href="~/Areas/Admin/Content/fineuploader.min.css" />
	<script type="text/javascript" src="~/Areas/Admin/Scripts/fineuploader.min.js"></script>
	//other variables
	var random = EF.Services.CodeHelper.GenerateRandomInteger();
	var clientId = "picture" + random;
	var basePath = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>().GetLocation(false);
	var pictureService = EF.Core.ContextHelper.Current.Resolve<IPictureService>();
	var settingService = EF.Core.ContextHelper.Current.Resolve<ISettingService>();
	var picture = pictureService.GetPictureById(Model);
	var fileTypesAllowedSetting = settingService.GetSettingByKey("PictureTypesAllowed").Value;
	var splitTypes = "";
	foreach (string type in fileTypesAllowedSetting.Split(','))
	{
		splitTypes += "'" + type + "',";
	}
	var maxSizeAllowedSetting = settingService.GetSettingByKey("MaximumSizeAllowed").Value;

}
@*fine uploader container*@
<div id="@clientId">
	<noscript>
		<p>
			Please enable JavaScript to use file uploader.
		</p>
		<!-- or put a simple form for upload here -->
	</noscript>
</div>
<input type="hidden" name="pictureids" id="pictureids" value="" />
@*fine uploader template (keep it synchronized to \Content\fineuploader\templates\default.html)*@
<script type="text/template" id="@(clientId)-qq-template">
	<div class="qq-uploader-selector qq-uploader">
		<div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
			<span>Drop Files</span>
		</div>
		<div class="qq-upload-button-selector qq-upload-button">
			<div>Upload Picture</div>
		</div>
		<span class="qq-drop-processing-selector qq-drop-processing">
			<span>Processing</span>
			<span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
		</span>
		<ul class="qq-upload-list-selector qq-upload-list">
			<li>
				<div class="qq-progress-bar-container-selector">
					<div class="qq-progress-bar-selector qq-progress-bar"></div>
				</div>
				<span class="qq-upload-spinner-selector qq-upload-spinner"></span>
				<span class="qq-edit-filename-icon-selector qq-edit-filename-icon"></span>
				<span class="qq-upload-file-selector qq-upload-file"></span>
				<input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
				<span class="qq-upload-size-selector qq-upload-size"></span>
				<a class="qq-upload-cancel-selector qq-upload-cancel" href="#">Cancel</a>
				<a class="qq-upload-retry-selector qq-upload-retry" href="#">Retry</a>
				<a class="qq-upload-delete-selector qq-upload-delete" href="#">Delete</a>
				<span class="qq-upload-status-text-selector qq-upload-status-text"></span>
			</li>
		</ul>
	</div>
</script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#@(clientId)").fineUploader({
            request: {
                endpoint: '@(Url.Action("AsyncSliderPictureUpload", "Picture", new { Area = "admin" }))'
            },
            template: "@(clientId)-qq-template",
				multiple: false,
            allowedExtensions: [@Html.Raw(splitTypes)],
            sizeLimit: @maxSizeAllowedSetting
		}).on("complete", function (event, id, name, responseJSON, xhr) {
			if (responseJSON.success) {
				var curVal = $('#pictureids').val();
				if (curVal)
					$('#pictureids').val(curVal + "," + responseJSON.pictureId);
				else
					$('#pictureids').val(responseJSON.pictureId);

				$("#picture-list").show();
				$("#picture-grid-body").append('<tr id="' + responseJSON.pictureId + '"><th scope="row"><img src="' + responseJSON.imageUrl + '" alt="" class="img-fluid z-depth-0"></th><td><button type="button" class="btn btn-sm btn-primary waves-effect waves-light" data-toggle="tooltip" data-placement="top" title="" id="removepic_' + responseJSON.pictureId + '" data-original-title="Remove item">X</button></td></tr >');
			}
		});

		$(document).on("click", "button[id^=removepic_]", function (e) {
			var picid = $(this).attr('id').split('_')[1];
			$('#pictureids').val(removeValue($('#pictureids').val(), picid,","));
			$(this).closest('tr').remove();
		});
	});

	var removeValue = function (list, value, separator) {
		separator = separator || ",";
		var values = list.split(separator);
		for (var i = 0; i < values.length; i++) {
			if (values[i] == value) {
				values.splice(i, 1);
				return values.join(separator);
			}
		}
		return list;
	}
</script>