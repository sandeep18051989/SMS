@model IList<SMS.Models.Widgets.BlogWidgetModel>
@using EF.Services;
@using EF.Services.Http;
@{
    var urlHelperService = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>();
    var basePath = urlHelperService.GetLocation(false);
    var testimonial = Model.ToList().FirstOrDefault();
}
<div class="col-md-12 text-center">
    <h6><i class="fa fa-star-o"></i>WE ARE BEST<i class="fa fa-star-o"></i></h6>
    <h1>BLOG ACTIVITIES</h1>
    <p>Our school blog activities</p>
</div>
<div class="row hover-content">
    @foreach (var blog in Model)
    {
        <div class="col-md-4 mb-4">
            <div class="card">
                <div style="max-height:250px;min-height:250px;" class="card-body">
                    <h4 class="card-title">
                        <a href="@Url.RouteUrl("Blog", new { name = blog.SystemName })" class="dark-text">
                            @(blog.Name)
                        </a>
                    </h4>
                    @{ var description = (!string.IsNullOrEmpty(blog.BlogHtml) ? blog.BlogHtml.Length > 200 ? ("<p class='card-text'>" + blog.BlogHtml.Substring(0, 200) + "...</p>") : ("<p class='card-text'>" + blog.BlogHtml + "</p>") : ("<p class='card-text'>" + (blog.Subject) + "</p>")); }
                    @Html.Raw(description)
                </div>
                <div class="mdb-color lighten-3 text-center">
                    <ul class="list-unstyled list-inline font-small mt-3">
                        <li class="list-inline-item pr-2 white-text">
                            <i class="fa fa-clock-o pr-1"></i>@CodeHelper.TimeAgo(blog.ModifiedOn.Value)
                        </li>
                        <li class="list-inline-item pr-2">
                            <a href="@Url.RouteUrl("Blog", new { name = blog.SystemName })" class="white-text">
                                <i class="fa fa-comments-o pr-1"></i>@blog.Comments.Count
                            </a>
                        </li>
                        <li class="list-inline-item pr-2">
                            <a href="@Url.RouteUrl("Blog", new { name = blog.SystemName })" class="white-text">
                                <i class="fa fa-thumbs-o-up pr-1"></i>@blog.Reactions.Count(r => r.IsLike.HasValue && r.IsLike.Value)
                            </a>
                        </li>
                        <li class="list-inline-item pr-2">
                            <a href="@Url.RouteUrl("Blog", new { name = blog.SystemName })" class="white-text">
                                <i class="fa fa-angle-double-right pr-1"></i>@blog.Reactions.Count(r => r.IsAngry.HasValue && r.IsAngry.Value)
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
     }
    <a href="@Url.Action("List", "Blog", new { @Area="" })" class="btn btn-sm btn-outline-info btn-view-all text-black-50 pull-right"><b>VIEW ALL</b></a>
</div>
