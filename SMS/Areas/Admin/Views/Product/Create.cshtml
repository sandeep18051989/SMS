@model SMS.Models.ProductModel
@{
	ViewBag.Title = "Create Product";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row">
	<div class="col-md-12 mr-4">
		<section class="create-form">
			@using (Html.BeginForm())
			{
				@Html.AntiForgeryToken()
				@Html.HiddenFor(model => model.Id)
				<div class="row">
					<div id="admin-page-header" class="col-xs-12 col-md-12">
						<h3 class="section-heading mr-auto">CREATE PRODUCT</h3>
						<input type="submit" value="Create" class="btn btn-primary mr-auto" />
					</div>
				</div>
				<div class="row">
					<div class="col-md-12">
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					</div>
				</div>
				<hr />
				<div class="row text-left">
					<div class="col-md-6 mb-4">
						<div class="md-form">
							<i class="fa fa-play-circle-o prefix"></i>
							@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @tabindex = "1", @maxlength = "50" } })
							@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
							@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="row text-left">
					<div class="col-md-6 mb-4">
						<div class="md-form">
							<i class="fa fa-html5 prefix"></i>
							@Html.EditorFor(model => model.Description, "HtmlEditor.cshtml")
							@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
							@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="row text-left">
					<div class="col-md-6 mb-4">
						<div class="md-form">
							<i class="fa fa-link prefix"></i>
							@Html.EditorFor(model => model.SystemName, new { htmlAttributes = new { @class = "form-control", @tabindex = "3", @maxlength = "50" } })
							@Html.LabelFor(model => model.SystemName, htmlAttributes: new { @class = "control-label" })
							@Html.ValidationMessageFor(model => model.SystemName, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="row text-left">
					<div class="col-md-6 mb-4">
						<div class="md-form">
							<i class="fa fa-file prefix"></i>
							@Html.EditorFor(model => model.FileId, "File.cshtml")
							@Html.ValidationMessageFor(model => model.FileId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div id="file-list" class="row" @(Model.Files.Count > 0 ? "" : "style=display:none;") >
					<div class="col-md-6 my-3 text-left">
						<div class="card">
							<div class="card-body">
								<div class="table-responsive">
									<table class="table product-table">
										<thead class="mdb-color lighten-5">
											<tr>
												<th style="text-align:center;" colspan="2">Files</th>
											</tr>
										</thead>
										<tbody id="file-grid-body"></tbody>
									</table>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row text-left">
					<div class="col-md-6 mb-4">
						<div class="md-form">
							<i class="fa fa-picture-o prefix"></i>
							@Html.EditorFor(model => model.PictureId, "ProductPictureUpload.cshtml")
							@Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div id="picture-list" class="row" @(Model.Pictures.Count > 0 ? "" : "style=display:none;") >
					<div class="col-md-6 my-3 text-left">
						<div class="card">
							<div class="card-body">
								<div class="table-responsive">
									<table class="table product-table">
										<thead class="mdb-color lighten-5">
											<tr>
												<th style="text-align:center;" colspan="2">Pictures</th>
											</tr>
										</thead>
										<tbody id="picture-grid-body"></tbody>
									</table>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-md-7 mb-4">
						<input type="checkbox" id="IsActive" name="IsActive" value="@(Model.IsActive ? true : false)" checked="@(Model.IsActive ? "checked" : "")" />
						@Html.LabelFor(model => model.IsActive, "Active", htmlAttributes: new { })
						@Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
					</div>
				</div>
			}
		</section>
	</div>
</div>
<script type="text/javascript">
	$(document).ready(function () {
		if ($("#IsActive").val()) {
			$("#IsActive").attr('checked', true).val(true);
		}
		else {
			$("#IsActive").attr('checked', false).val(false);
		}
		$("#IsActive").change(function () {
			if ($(this).prop('checked')) {
				$(this).attr('checked', true).val(true);
			}
			else {
				$(this).attr('checked', false).val(false);
			}
		});
	});
</script>
