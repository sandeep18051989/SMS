@model IEnumerable<SMS.Areas.Admin.Models.RoleModel>
@using EF.Services
@{
	ViewBag.Title = "Roles";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
	<div class="col-xs-12 col-md-12">
		<h3 style="text-align:left;font-weight:bold;">Roles</h3>
	</div>
	<div class="clearfix"></div>
	<div class="col-xs-12 col-md-12">
		<div class="input-group pull-right">
			@Html.ActionLink("Create Role", "Create", "Role", null, new { @class = "btn btn-primary" })<text>&nbsp;&nbsp;&nbsp;</text><button class="btn btn-danger" type="button" id="delete-selected"><i class="fa fa-trash"></i>&nbsp;&nbsp;&nbsp;Delete</button>
		</div>
	</div>
	<div class="clearfix"></div>
	<div class="col-xs-12 col-md-12">
		<br />
		<div id="roles-table" class="form-group">
			<table class="table custom-table" data-sorting="true" data-paging="true" data-page-size="10">
				<thead>
					<tr>
						<th data-visible="false" data-class="expand" data-sortable="false"><input type="checkbox" id="allcheck" value="allcheck" /></th>
						<th>Name</th>
						<th data-breakpoints="xs sm md" data-title="Active" data-sortable="false" data-sort-ignore="true">Active</th>
						<th data-breakpoints="xs sm md" data-title="System" data-sortable="false" data-sort-ignore="true">System Defined</th>
						<th data-sortable="false" data-sort-ignore="true">Actions</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var eve in Model)
					{
						<tr>
							<td align="center"><input type="checkbox" id="@eve.Id" class="checkboxGroups" value="@eve.Id" /></td>
							<td align="center">@eve.RoleName</td>
							<td>
								<a href="javascript:void(0);" @(eve.IsSystemDefined ? "onclick=return false;" : "") title="@(!eve.IsSystemDefined ? !eve.IsActive ? "Click To Activate" : "Click To Deactivate" : string.Empty)" id="act(@eve.Id)">
									@if (eve.IsActive)
									{ <i style="font-size:24px;" class="fa fa-check-circle"></i> }
									else
									{ <i style="font-size:24px;" class="fa fa-circle"></i> }
								</a>
							</td>
							<td>
								@if (eve.IsSystemDefined)
								{ <i style="font-size:24px;" class="fa fa-check-circle"></i> }
								else
								{ <i style="font-size:24px;" class="fa fa-circle"></i> }
							</td>
							<td align="center">
								<a href="@Url.Action("Edit", "Role", new { @id = eve.Id })" id="@("edit_" + eve.Id)" title="Edit"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>&nbsp;&nbsp;<a id="@("roleid_" + eve.Id)" href="@Url.Action("RolePermissionList","Permission", new { @eve.Id })" title="View Permissions">
									<i class="fa fa-bullseye" aria-hidden="true"></i>
								</a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
	<script type="text/javascript">
		var selectedIds = [];
		$(document).ready(function () {
			//delete selected
			$('#delete-selected').click(function (e) {
				e.preventDefault();

				var postData = {
					selectedIds: selectedIds
				};
				addAntiForgeryToken(postData);

				$.ajax({
					cache: false,
					type: "POST",
					url: "@(Url.Action("DeleteSelected", "Role"))",
					data: postData,
					complete: function (data) {
						alert("Roles Deleted Successfully.");
					},
					error: function (xhr, ajaxOptions, thrownError) {
						alert(thrownError);
					},
					traditional: true
				});
				return false;
			});

			$('a[id^="act("]').click(function (e) {
				e.preventDefault();
				var postData = {
					id: $(this).id.match(/\((.*)\)/)
				};
				addAntiForgeryToken(postData);

				$.ajax({
					cache: false,
					type: "POST",
					url: "@(Url.Action("Toggle", "Role"))",
					data: postData,
					complete: function (data) {
						location.reload();
					},
					error: function (xhr, ajaxOptions, thrownError) {
						alert(thrownError);
					},
					traditional: true
				});
				return false;
			});

			$(document).on('click', '#allcheck', function () {
				$('.checkboxGroups').prop('checked', $(this).is(':checked')).change();
			});

			//wire up checkboxes.
			$('#roles-table').on('change', 'input[type=checkbox][id!=allcheck]', function (e) {
				var $check = $(this);
				if ($check.is(":checked") == true) {
					var checked = jQuery.inArray($check.val(), selectedIds);
					if (checked == -1) {
						//add id to selectedIds.
						selectedIds.push($check.val());
					}
				}
				else {
					var checked = jQuery.inArray($check.val(), selectedIds);
					if (checked > -1) {
						//remove id from selectedIds.
						selectedIds = $.grep(selectedIds, function (item, index) {
							return item != $check.val();
						});
					}
				}
				updateMasterCheckbox();
			});
		});

		function updateMasterCheckbox() {
			var numChkBoxes = $('#roles-table input[type=checkbox][id!=allcheck]').length;
			var numChkBoxesChecked = $('#roles-table input[type=checkbox][id!=allcheck]:checked').length;
			$('#allcheck').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
		}
	</script>
}
<script type="text/javascript">
		$(document).ready(function () {
			// Initiallize Footable
			$('table').DataTable({

				"processing": true, // for show progress bar  
				"serverSide": true, // for process server side  
				"filter": true, // this is for disable filter (search box)  
				"orderMulti": false, // for disable multiple column at once  
				"pageLength": 5,

				"ajax": {
					"url": "/Demo/LoadData",
					"type": "POST",
					"datatype": "json"
				},

				"columnDefs":
				[{
						"targets": [0],
						"visible": false,
						"searchable": false
					},
					{
						"targets": [7],
						"searchable": false,
						"orderable": false
					},
					{
						"targets": [8],
						"searchable": false,
						"orderable": false
					},
					{
						"targets": [9],
						"searchable": false,
						"orderable": false
					}],

				"columns": [
					{ "data": "CustomerID", "name": "CustomerID", "autoWidth": true },
					{ "data": "CompanyName", "name": "CompanyName", "autoWidth": true },
					{ "data": "ContactName", "title": "ContactName", "name": "ContactName", "autoWidth": true },
					{ "data": "ContactTitle", "name": "ContactTitle", "autoWidth": true },
					{ "data": "City", "name": "City", "autoWidth": true },
					{ "data": "PostalCode", "name": "PostalCode", "autoWidth": true },
					{ "data": "Country", "name": "Country", "autoWidth": true },
					{ "data": "Phone", "name": "Phone", "title": "Status", "autoWidth": true },
					{
						"render": function (data, type, full, meta)
							{ return '<a class="btn btn-info" href="/Demo/Edit/' + full.CustomerID + '">Edit</a>'; }
					},
					{
						data: null, render: function (data, type, row) {
							return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.CustomerID + "'); >Delete</a>";
						}
					}
				]
			});
		});
</script>