@model SMS.Models.TeacherModel
<div class="panel-group">
	@if (Model.Id > 0)
	{
		<div class="panel panel-default">
			<div class="panel-body table-responsive">
				<table class="table table-bordered custom-table" style="width: 100% !important;" cellpadding="0" cellspacing="0" id="teacherfiles-grid">
					<thead class="mdb-color lighten-5">
						<tr>
							<th>&nbsp;</th>
							<th class="text-left">Title</th>
							<th class="text-left">Type</th>
							<th>Size</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
				<script type="text/javascript">
					$(document).ready(function() {
						// Initiallize Datatable
						$('#teacherfiles-grid').DataTable({
							"paging": false,
							"bLengthChange": false, //thought this line could hide the LengthMenu
							"bInfo": false,
							"processing": true, // for show progress bar
							"serverSide": true, // for process server side
							"filter": false, // this is for disable filter (search box)
							"orderMulti": true, // for disable multiple column at once
							"ajax": {
								"url": "/Admin/Teacher/LoadFileGrid/@(Model.Id)",
								"type": "POST",
								"datatype": "json"
							},
							"aaSorting": [],
							"columns": [
								{
									"searchable": false,
									"title": "",
									"render": function (data, type, row) {
                                        if (type === "display") {
                                            return '<div class="thumb"><a href="' + row.FileSrc + '" alt="' + row.Title + '">' + row.Title + '</a></div>';
										}
										return data;
									},
									"orderable": false,
									"className": 'text-center',
									"defaultContent": ""
								},
								{
									"data": "Title",
									"title": "Title",
									"render": function(data, type, row) {
										if (type === "display") {
                                            return '<div class="md-form form-group"><input data-val-required="true" type="text" id="fileTitle_' + row.Id + '" value="' + ((row.Title != null && row.Title != "") ? row.Title : "") + '" aria-label="Title" class="form-control" style="width:150px"></div>';
										}
										return data;
									},
									"className": "text-center",
									"orderable": false,
									"defaultContent": ""
								},
								{
									"data": "DisplayOrder",
									"title": "Display Order",
									"render": function(data, type, row) {
										if (type === "display") {
                                            return '<div class="md-form form-group"><input data-val-required="true" type="text" id="fileType_' + row.Id + '" value="' + ((row.Type != null && row.Type != "") ? row.Type : "") + '" aria-label="Type" class="form-control" style="width:150px"></div>';
										}
										return data;
									},
									"className": "dt-body-center",
									"orderable": false,
									"defaultContent": ""
								},
								{
									"title": "Actions",
									"orderable": false,
									"className": 'text-center',
									"render": function(data, type, row) {
										if (type === "display") {
											var dateTemplate = '<div class="md-form form-group"><button type="button" class="btn btn-info btn-rounded btn-sm my-0" data-file="' + row.Id + '" data-teacher="' + row.TeacherId + '" id="fileupd_' + row.Id + '" title="Update File"><i class="fa fa-refresh" aria-hidden="true">&nbsp;&nbsp;</i>Update</button>';
											dateTemplate += '&nbsp;&nbsp;<button type="button" class="btn btn-danger btn-rounded btn-sm my-0" id="filedel_' + row.Id + '" title="Delete File"><i class="fa fa-trash-o" aria-hidden="true">&nbsp;&nbsp;</i>Delete</button></div>';
											return dateTemplate;
										}
										return data;
									},
									"defaultContent": ""
								}
							],
							"select": {
								"style": 'os',
								"selector": 'td:first-child'
							}
						});

					    $('#addFile').click(function () {
					        debugger;
							var fileId = $("#@Html.IdFor(model => model.FileId)").val();
                            var teacherId = $("#@Html.IdFor(model => model.Id)").val();
							if (fileId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "Please upload file!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								}, 1e3);
								return;
							}

							$('#addTeacherFile').attr('disabled', true);

                            var postData = {
                                teacherId: teacherId, 
								fileId: fileId,
                                title: "",
                                type:""
							};

							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("TeacherFileAddUpdate", "Teacher"))",
								data: postData,
								success: function (data) {
									$('#addTeacherFile').attr('disabled', false);
									$('.uploader').fineUploader('reset');
									$('#teacherfiles-grid').DataTable().ajax.reload();
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "File added to teacher!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									$('#addTeacherFile').attr('disabled', false);
								}
							});
						});

						$(document).on("click", 'button[id^=filedel_]', function () {
							var fileId = parseInt($(this).attr('id').split('_')[1]);

							if (fileId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "An error occurred while deleting file!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								}, 1e3);
								return;
							}

							var postData = {
								id: fileId
							};

							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("DeleteTeacherFile", "Teacher"))",
								data: postData,
								success: function (data) {
									$('#teacherfiles-grid').DataTable().ajax.reload();
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "File deleted successfully!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									setTimeout(function () {
										$.gritter.add({
											title: "Failure",
											text: "Failed to delete teacher file!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								}
							});
						});

						$(document).on("click", 'button[id^=fileupd_]', function () {
							var fileId = parseInt($(this).attr('id').split('_')[1]);
							var teacherId = parseInt($(this).attr("data-teacher"));
                            var title = $("#fileTitle_" + fileId).val();
                            var type = $("#fileType_" + fileId).val();

							if (fileId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "An error occurred while updating file!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								},1e3);
								return;
							}

                            if ((type == null || type === "") || (title == null || title === "")) {
								setTimeout(function () {
								$.gritter.add({
									title: "Failure",
									text: "Please enter mandatory fields!",
									sticky: !0,
									time: "",
									class_name: "my-sticky-class"
									});
								},1e3);
								return;
							}

							var postData = {
								teacherId: teacherId,
								fileId: fileId,
								title: title,
								type: type
							};
							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("TeacherFileAddUpdate", "Teacher"))",
								data: postData,
								success: function (data) {
									$('#teacherfiles-grid').DataTable().ajax.reload();
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "File updated successfully!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									setTimeout(function () {
										$.gritter.add({
											title: "Failure",
											text: "Failed to update teacher file!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									},1e3);
								}
							});
						});
					});
				</script>
				@Html.EditorFor(model => model.FileId)
				@Html.ValidationMessageFor(model => model.FileId)
				&nbsp;
			</div>
			<div class="panel-footer">
				<button type="button" id="addFile" class="btn btn-primary pull-right"><i class="fa fa-plus-circle"></i>&nbsp;&nbsp;Add File To Teacher</button>
			</div>
		</div>
	}
	else
	{
		<div class="panel panel-default">
			<div class="panel-body">
				<div class="alert alert-info" role="alert">
					<strong>Heads up!</strong> Please save teacher first to upload files.
				</div>
			</div>
		</div>
	}
</div>