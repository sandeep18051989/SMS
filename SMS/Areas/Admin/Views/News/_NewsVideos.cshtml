@using EF.Services.Http
@model SMS.Models.NewsModel
@{
	var basePath = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>().GetLocation(false);
}
<div class="panel-group">
	@if (Model.Id > 0)
	{
		<div class="panel panel-default">
			<div class="panel-body table-responsive">
				<table class="table table-responsive-md custom-table" style="width: 100% !important;" cellpadding="0" cellspacing="0" id="newsvideos-grid">
					<thead class="mdb-color lighten-5">
						<tr>
							<th>&nbsp;</th>
							<th>Start Date</th>
							<th>End Date</th>
							<th>Display Order</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
				<script type="text/javascript">
					$(document).ready(function () {
						// Initiallize Datatable
						$('#newsvideos-grid').DataTable({
							"paging": false,
							"bLengthChange": false, //thought this line could hide the LengthMenu
							"bInfo": false,
							"processing": true, // for show progress bar
							"serverSide": true, // for process server side
							"filter": false, // this is for disable filter (search box)
							"orderMulti": false, // for disable multiple column at once
							"ajax": {
								"url": "/Admin/News/LoadVideoGrid/@(Model.Id)",
								"type": "POST",
								"datatype": "json"
							},
							"aaSorting": [],
							"columns": [
								{
									"searchable": false,
									"title": "",
									"render": function (data, type, row) {
										if (type === "display") {
											return '<video controls="controls" style="width:200px;" preload="auto" poster="@(basePath + "Content/images/video-poster.png")" playsinline muted><source src="@(basePath)' + row.VideoSrc + '" type="video/mp4"></video>';
										}
										return data;
									},
									"orderable": false,
									"className": 'text-center'
								},
								{
									"data": "StartDate",
									"title": "Start Date",
									"render": function(data, type, row) {
										if (type === "display") {
											var dateTemplate = '<div class="md-form form-group"><i class="fa fa-caledar-alt prefix"></i><input  data-val-required="true" type="text" id="startvid_' + row.VideoId + '"';
											dateTemplate += ' data-value="' + moment(row.StartDate).format("YYYY/MM/DD") + '"';
											dateTemplate +=' aria-label="Start Date" class="form-control datepicker" style= "width:200px"><script type="text/javascript">$(function () {';
											dateTemplate += ' $("#startvid_' + row.VideoId + '").pickadate({format: "dd mmmm, yyyy",min:new Date(moment("' + row.StartDate + '").format("YYYY/MM/DD")),selectYears: false,selectMonths: false,max:new Date(moment("' + row.EndDate + '").format("YYYY/MM/DD"))});';
											dateTemplate += 'var $input' + row.VideoId + ' = $("#startvid_' + row.VideoId + '").pickadate();';
											dateTemplate += 'var picker' + row.VideoId + ' = $input' + row.VideoId + '.pickadate("picker");';
											dateTemplate += 'picker' + row.VideoId + '.set("select", "' + (row.StartDate != null && row.StartDate !== "" ? new Date(moment(row.StartDate).format("YYYY/MM/DD")) : "") + '");';
											dateTemplate += 'picker' + row.VideoId + '.on({close: function() {$(document.activeElement).blur();$("#endvid_' + row.VideoId + '").pickadate("picker").set("min", new Date(moment($("#startvid_' + row.VideoId + '").val()).format("YYYY/MM/DD")));}});';
											dateTemplate += '});<\/script></div>';
											return dateTemplate;
										}
										return data;
									},
									"className": "text-center",
									"orderable": false
								},
								{
									"data": "EndDate",
									"title": "End Date",
									"render": function(data, type, row) {
										if (type === "display") {
											var dateTemplate = '<div class="md-form form-group"><i class="fa fa-caledar-alt prefix"></i><input  data-val-required="true" type="text" id="endvid_' + row.VideoId + '"';
											dateTemplate += ' data-value="' + moment(row.EndDate).format("DD MMMM, YYYY") + '" value="' + moment(row.EndDate).format("YYYY/MM/DD") + '"';
											dateTemplate += ' aria-label="End Date" class="form-control datepicker" style= "width:200px"><script type="text/javascript">$(function () {';
											dateTemplate += ' $("#endvid_' + row.VideoId + '").pickadate({format:"dd mmmm, yyyy",selectYears: false,selectMonths: false,min:new Date(moment("' + row.StartDate + '").format("YYYY/MM/DD"))});';
											dateTemplate += 'var $inputend' + row.VideoId + ' = $("#endvid_' + row.VideoId + '").pickadate();';
											dateTemplate += 'var pickerend' + row.VideoId + ' = $inputend' + row.VideoId + '.pickadate("picker");';
											dateTemplate += '$("#endvid_' + row.VideoId + '").val($("#endvid_' + row.VideoId + '").attr("data-value"));';
											dateTemplate += 'pickerend' + row.VideoId + '.on({close: function() {$(document.activeElement).blur();$("#startvid_' + row.VideoId + '").pickadate("picker").set("max", new Date(moment($("#endvid_' + row.VideoId + '").val()).format("YYYY/MM/DD")));}});';
											dateTemplate += '});<\/script></div>';
											return dateTemplate;
										}
										return data;
									},
									"className": "text-center",
									"orderable": false
								},
								{
									"data": "DisplayOrder",
									"title": "Display Order",
									"render": function(data, type, row) {
										if (type === "display") {
											return '<div class="md-form form-group"><i class="fa fa-sort-alpha-asc prefix"></i><input min="1" max="1000" data-val-required="true" type="number" id="vidOrder_' + row.VideoId + '" value="' + (row.DisplayOrder > 0 ? row.DisplayOrder : "") + '" aria-label="Display Order" class="form-control" style="width:150px"></div>';
										}
										return data;
									},
									"className": "dt-body-center",
									"orderable": false
								},
								{
									"title": "Actions",
									"orderable": false,
									"className": 'text-center',
									"render": function(data, type, row) {
										if (type === "display") {
											var dateTemplate = '<div class="md-form form-group"><button type="button" class="btn btn-info btn-rounded btn-sm my-0" data-video="' + row.VideoId + '" data-news="' + row.NewsId + '" id="vidupd_' + row.VideoId + '" title="Update Video"><i class="fa fa-refresh" aria-hidden="true">&nbsp;&nbsp;</i>Update</button>';
											dateTemplate += '&nbsp;&nbsp;<button type="button" class="btn btn-danger btn-rounded btn-sm my-0" id="viddel_' + row.VideoId + '" title="Delete Video"><i class="fa fa-trash-o" aria-hidden="true">&nbsp;&nbsp;</i>Delete</button></div>';
											return dateTemplate;
										}
										return data;
									}
								}
							],
							"select": {
								"style": 'os',
								"selector": 'td:first-child'
							}
						});

						$('#addVideo').click(function() {
							var videoId = $("#@Html.IdFor(model => model.InsertVideoModel.VideoId)").val();

							if (videoId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "Please upload video!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								}, 1e3);
								return;
							}

							$('#addNewsVideo').attr('disabled', true);

							var postData = {
								videoId: videoId,
								displayOrder: 0,
								newsId: @Model.Id,
								startDate: moment(new Date()).format("DD MMM YYYY"),
								endDate: moment(new Date()).format("DD MMM YYYY")
							};

							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("NewsVideoAdd", "News"))",
								data: postData,
								success: function (data) {
									$('#addNewsVideo').attr('disabled', false);
									$('.upload-video').fineUploader('reset');
									$('#newsvideos-grid').trigger('reloadGrid');
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "Video added to news!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									$('#addNewsVideo').attr('disabled', false);
								}
							});
						});

						$(document).on("click", 'button[id^=viddel_]', function () {
							var videoId = parseInt($(this).attr('id').split('_')[1]);

							if (videoId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "An error occurred while deleting video!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								}, 1e3);
								return;
							}

							var postData = {
								id: videoId
							};

							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("DeleteNewsVideo", "News"))",
								data: postData,
								success: function (data) {
									$('#newsvideos-grid').trigger('reloadGrid');
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "Video deleted successfully!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									setTimeout(function () {
										$.gritter.add({
											title: "Failure",
											text: "Failed to delete news video!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								}
							});
						});

						$(document).on("click", 'button[id^=vidupd_]', function () {
							var videoId = parseInt($(this).attr('id').split('_')[1]);
							var newsId = parseInt($(this).attr("data-news"));
							var startDate = moment($("#startvid_" + videoId).val()).format("DD MMMM, YYYY");
							var endDate = moment($("#endvid_" + videoId).val()).format("DD MMMM, YYYY");
							var order = $("#vidOrder_" + videoId).val();

							if (videoId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "An error occurred while updating video!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								},1e3);
								return;
							}

							if ((startDate == null || startDate === "") ||
								(endDate == null || endDate === "") ||
								(order == null || order === "")) {
								setTimeout(function () {
								$.gritter.add({
									title: "Failure",
									text: "Please enter mandatory fields!",
									sticky: !0,
									time: "",
									class_name: "my-sticky-class"
									});
								},1e3);
								return;
							}

							var postData = {
								newsId: newsId,
								videoId: videoId,
								startDay: moment(startDate).format("DD"),
								startMonth: moment(startDate).format("MM"),
								startYear: moment(startDate).format("YYYY"),
								endDay: moment(endDate).format("DD"),
								endMonth: moment(endDate).format("MM"),
								endYear: moment(endDate).format("YYYY"),
								displayOrder: order
							};
							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("UpdateNewsVideo", "News"))",
								data: postData,
								success: function (data) {
									$('#newsvideos-grid').trigger('reloadGrid');
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "Video updated successfully!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									setTimeout(function () {
										$.gritter.add({
											title: "Failure",
											text: "Failed to update news video!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									},1e3);
								}
							});
						});

					});
				</script>
				@Html.EditorFor(model => model.InsertVideoModel.VideoId)
				@Html.ValidationMessageFor(model => model.InsertVideoModel.VideoId)
				&nbsp;
			</div>
			<div class="panel-footer">
				<button type="button" id="addVideo" class="btn btn-primary pull-right"><i class="fa fa-plus-circle"></i> Save Video</button>
			</div>
		</div>
	}
	else
	{
		<div class="panel panel-default">
			<div class="panel-body">
				<div class="alert alert-info" role="alert">
					<strong>Heads up!</strong> Please save news first to upload videos.
				</div>
			</div>
		</div>
	}
</div>