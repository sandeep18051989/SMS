@model SMS.Models.NewsModel
@using EF.Services.Http;
@{
    var basePath = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>().GetLocation(false);
}
<div class="panel-group">
	@if (Model.Id > 0)
	{
		<div class="panel panel-default">
			<div class="panel-body table-responsive">
				<table class="table table-bordered custom-table" style="width: 100% !important;" cellpadding="0" cellspacing="0" id="newspictures-grid">
					<thead class="mdb-color lighten-5">
						<tr>
							<th>&nbsp;</th>
							<th class="text-left">Start Date</th>
							<th class="text-left">End Date</th>
							<th>Default</th>
							<th class="text-left">Display Order</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody></tbody>
				</table>
				<script type="text/javascript">
					$(document).ready(function() {
						// Initiallize Datatable
						$('#newspictures-grid').DataTable({
							"paging": false,
							"bLengthChange": false, //thought this line could hide the LengthMenu
							"bInfo": false,
							"processing": true, // for show progress bar
							"serverSide": true, // for process server side
							"filter": false, // this is for disable filter (search box)
							"orderMulti": true, // for disable multiple column at once
							"ajax": {
								"url": "/Admin/News/LoadPictureGrid/@(Model.Id)",
								"type": "POST",
								"datatype": "json"
							},
							"aaSorting": [],
							"columns": [
								{
									"searchable": false,
									"title": "",
									"render": function (data, type, row) {
										if (type === "display") {
											return '<div class="thumb"><img src="' + row.PictureSrc + '" alt="" class="float-left"></div>';
										}
										return data;
									},
									"orderable": false,
									"className": 'text-center',
									"defaultContent": ""
								},
								{
									"data": "",
									"title": "Start Date",
									"render": function(data, type, row) {
										if (type === "display") {
										    var dateTemplate = '<div class="md-form form-group"><i class="fa fa-caledar-alt prefix"></i><input data-val-required="true" type="text" id="startpic_' + row.PictureId + '"';
										    dateTemplate += ' data-value="' + moment(row.StartDate) + '" value="' + moment(row.StartDate).format("YYYY/MM/DD") + '"';
										    dateTemplate += ' aria-label="Start Date" class="form-control datepicker" style= "width:200px">';
										    dateTemplate += '<script type="text/javascript">$(function () {';
										    dateTemplate += ' $("#startpic_' + row.PictureId + '").pickadate({format: "dd mmmm, yyyy", formatSubmit: "dd mmmm, yyyy",selectYears: false,selectMonths: false,max:new Date(moment("' + row.EndDate + '").format("YYYY/MM/DD"))});';
										    dateTemplate += 'var $input' + row.PictureId + ' = $("#startpic_' + row.PictureId + '").pickadate();';
										    dateTemplate += 'var picker' + row.PictureId + ' = $input' + row.PictureId + '.pickadate("picker");';
										    //dateTemplate += 'picker' + row.PictureId + '.set("select", "' + new Date(moment(row.StartDate).format("YYYY/MM/DD")) + '");';
										    dateTemplate += '$(picker' + row.PictureId + ').on({close: function() {';
										    dateTemplate += '$(document.activeElement).blur();';
										    dateTemplate += '$("#endpic_' + row.PictureId + '").pickadate("picker").set("min", new Date(moment($("#startpic_' + row.PictureId + '").val()).format("YYYY/MM/DD")));';
                                            dateTemplate += '}});';
										    dateTemplate += '});<\/script>';
										    
										    dateTemplate += '</div>';
										    return dateTemplate;
										}
										return data;
									},
									"className": "dt-body-center",
									"orderable": false,
									"defaultContent": ""
								},
								{
									"data": "",
									"title": "End Date",
									"render": function(data, type, row) {
										if (type === "display") {
											var dateTemplate = '<div class="md-form form-group"><i class="fa fa-caledar-alt prefix"></i><input  data-val-required="true" type="text" id="endpic_' + row.PictureId + '"';
											dateTemplate += ' data-value="' + moment(row.EndDate).format("DD MMMM, YYYY") + '" value="' + moment(row.EndDate).format("DD MMMM, YYYY") + '"';
											dateTemplate += ' aria-label="End Date" class="form-control datepicker" style= "width:200px"><script type="text/javascript">$(function () {';
											dateTemplate += ' $("#endpic_' + row.PictureId + '").pickadate({format:"dd mmmm, yyyy", formatSubmit: "dd mmmm, yyyy",selectYears: false,selectMonths: false});';
											dateTemplate += 'var $inputend' + row.PictureId + ' = $("#endpic_' + row.PictureId + '").pickadate();';
											dateTemplate += 'var pickerend' + row.PictureId + ' = $inputend' + row.PictureId + '.pickadate("picker");';
											dateTemplate += '$("#endpic_' + row.PictureId + '").val($("#endpic_' + row.PictureId + '").attr("data-value"));';
											dateTemplate += 'pickerend' + row.PictureId + '.on({close: function() {$(document.activeElement).blur();$("#startpic_' + row.PictureId + '").pickadate("picker").set("max", new Date(moment($("#endpic_' + row.PictureId + '").val()).format("YYYY/MM/DD")));}});';
											dateTemplate += '});<\/script></div>';
											return dateTemplate;
										}
										return data;
									},
									"className": "dt-body-center",
									"orderable": false,
									"defaultContent": ""
								},
								{
									"data": "IsDefault",
									"title": "Default",
									"render": function(data, type, row) {
										if (type === "display") {
											var templateHtml = '<div class="md-form form-group form-check"><input type="checkbox" value="' +
												(row.IsDefault ? true : false) +
												'" name="defaultpicture" class="form-control form-check-input" id="defaultpic_' +
												row.PictureId +
												'"';

											if (row.IsDefault)
												templateHtml += ' checked="checked" ';

											templateHtml += '><label class="form-check-label" for="defaultpic_' + row.PictureId + '"></label></div>';
											return templateHtml;
										}
										return data;
									},
									"className": "text-center",
									"orderable": false,
									"defaultContent": ""
								},
								{
									"data": "DisplayOrder",
									"title": "Display Order",
									"render": function(data, type, row) {
										if (type === "display") {
											return '<div class="md-form form-group"><i class="fa fa-sort-alpha-asc prefix"></i><input min="1" max="1000" data-val-required="true" type="number" id="picOrder_' + row.PictureId + '" value="' + (row.DisplayOrder > 0 ? row.DisplayOrder : "") +'" aria-label="Display Order" class="form-control" style="width:150px"></div>';
										}
										return data;
									},
									"className": "dt-body-center",
									"orderable": false,
									"defaultContent": ""
								},
								{
									"title": "Actions",
									"orderable": false,
									"className": 'text-center',
									"render": function(data, type, row) {
										if (type === "display") {
											var dateTemplate = '<div class="md-form form-group"><button type="button" class="btn btn-info btn-rounded btn-sm my-0" data-picture="' + row.PictureId + '" data-news="' + row.NewsId + '" id="picupd_' + row.PictureId + '" title="Update Picture"><i class="fa fa-refresh" aria-hidden="true">&nbsp;&nbsp;</i>Update</button>';
											dateTemplate += '&nbsp;&nbsp;<button type="button" class="btn btn-danger btn-rounded btn-sm my-0" id="picdel_' + row.PictureId + '" title="Delete Picture"><i class="fa fa-trash-o" aria-hidden="true">&nbsp;&nbsp;</i>Delete</button></div>';
											return dateTemplate;
										}
										return data;
									},
									"defaultContent": ""
								}
							],
							"select": {
								"style": 'os',
								"selector": 'td:first-child'
							}
						});

						$('#addPicture').click(function() {
							var pictureId = $("#@Html.IdFor(model => model.PictureId)").val();

							if (pictureId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "Please upload picture!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								}, 1e3);
								return;
							}

							$('#addNewsPicture').attr('disabled', true);

							var postData = {
								pictureId: pictureId,
								displayOrder: 0,
								isDefault: false,
								newsId: @Model.Id,
								startDate: moment(new Date()).format("DD MMM YYYY"),
								endDate: moment(new Date()).format("DD MMM YYYY")
							};

							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("NewsPictureAdd", "News"))",
								data: postData,
								success: function (data) {
									$('.uploader').fineUploader('reset');
									$("button[data-resource='picture']").attr("disabled", true);
									var fieldId = $("#@(Html.IdFor(m => m.PictureId))").data('element');
									if(fieldId != null && fieldId !== ""){
									    $("#" + fieldId + "image").html("<img class='img-fluid' alt='' src='@(basePath)Content/images/image-placeholder100x100.jpg'/>");
									    $("#" + fieldId + "remove").hide();
									}

									$('#newspictures-grid').DataTable().ajax.reload();
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "Picture added to news!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									$('#addNewsPicture').attr('disabled', false);
								}
							});
						});

						$(document).on("click", 'button[id^=picdel_]', function () {
							var pictureId = parseInt($(this).attr('id').split('_')[1]);

							if (pictureId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "An error occurred while deleting picture!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								}, 1e3);
								return;
							}

							var postData = {
								id: pictureId
							};

							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("DeleteNewsPicture", "News"))",
								data: postData,
								success: function (data) {
									$('#newspictures-grid').DataTable().ajax.reload();
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "Picture deleted successfully!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									setTimeout(function () {
										$.gritter.add({
											title: "Failure",
											text: "Failed to delete news picture!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								}
							});
						});

						$(document).on("click", 'button[id^=picupd_]', function () {
							var pictureId = parseInt($(this).attr('id').split('_')[1]);
							var newsId = parseInt($(this).attr("data-news"));
							var startDate = moment($("#startpic_" + pictureId).val()).format("DD MMMM, YYYY");
							var endDate = moment($("#endpic_" + pictureId).val()).format("DD MMMM, YYYY");
							var defaultPic = $("#defaultpic_" + pictureId).val();
							var order = $("#picOrder_" + pictureId).val();

							if (pictureId === 0) {
								setTimeout(function () {
									$.gritter.add({
										title: "Failure",
										text: "An error occurred while updating picture!",
										sticky: !0,
										time: "",
										class_name: "my-sticky-class"
									});
								},1e3);
								return;
							}

							if ((startDate == null || startDate === "") ||
								(endDate == null || endDate === "") ||
								(order == null || order === "")) {
								setTimeout(function () {
								$.gritter.add({
									title: "Failure",
									text: "Please enter mandatory fields!",
									sticky: !0,
									time: "",
									class_name: "my-sticky-class"
									});
								},1e3);
								return;
							}

							var postData = {
								newsId: newsId,
								pictureId: pictureId,
								startDay: moment(startDate).format("DD"),
								startMonth: moment(startDate).format("MM"),
								startYear: moment(startDate).format("YYYY"),
								endDay: moment(endDate).format("DD"),
								endMonth: moment(endDate).format("MM"),
								endYear: moment(endDate).format("YYYY"),
								isDefault: defaultPic,
								displayOrder: order
							};
							addAntiForgeryToken(postData);

							$.ajax({
								cache: false,
								type: "POST",
								url: "@(Url.Action("UpdateNewsPicture", "News"))",
								data: postData,
								success: function (data) {
									$('#newspictures-grid').DataTable().ajax.reload();
									setTimeout(function () {
										$.gritter.add({
											title: "Success",
											text: "Picture updated successfully!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									}, 1e3);
								},
								error: function(xhr, ajaxOptions, thrownError) {
									console.log(xhr.responseText);
									setTimeout(function () {
										$.gritter.add({
											title: "Failure",
											text: "Failed to update news picture!",
											sticky: !0,
											time: "",
											class_name: "my-sticky-class"
										});
									},1e3);
								}
							});
						});

						$(document).on("change", "input[type=checkbox][name=defaultpicture]",function() {
							if ($(this).prop('checked')) {
								$("input[name=defaultpicture]").prop("checked", false);
								$(this).attr('checked', true).val(true);
							} else {
								$(this).attr('checked', false).val(false);
							}
						});
					});
				</script>
				@Html.EditorFor(model => model.PictureId)
				@Html.ValidationMessageFor(model => model.PictureId)
				&nbsp;
			</div>
			<div class="panel-footer">
				<button type="button" id="addPicture" data-resource="picture" class="btn btn-primary pull-right"><i class="fa fa-plus-circle"></i>&nbsp;&nbsp;Add Picture To News</button>
			</div>
		</div>
	}
	else
	{
		<div class="panel panel-default">
			<div class="panel-body">
				<div class="alert alert-info" role="alert">
					<strong>Heads up!</strong> Please save news first to upload picture.
				</div>
			</div>
		</div>
	}
</div>