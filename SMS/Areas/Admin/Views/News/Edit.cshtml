@model SMS.Models.NewsModel
@using EF.Services;
@using EF.Services.Http;
@{
    ViewBag.Title = "Update News";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var basePath = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>().GetLocation(false);
}
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">Update News</h3>
    </div>
    <div class="col-md-7 align-self-center">
        @Html.Raw(Html.BuildBreadcrumbNavigation())
    </div>
</div>
<div class="row">
    <div class="col-md-12 mr-4">
        <section class="edit-form">
            @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            <div class="row">
                <div id="admin-page-header" class="col-xs-12 col-md-12">
                    <h3 class="section-heading mr-auto">EDIT NEWS</h3>
                    <button type="submit" name="save" class="btn btn-primary mr-auto">
                        <i class="fa fa-save">&nbsp;&nbsp;</i>Save
                    </button>&nbsp;&nbsp;
                    <button type="submit" value="Create" name="save-continue" class="btn btn-primary mr-auto">
                        <i class="fa fa-save">&nbsp;&nbsp;</i>Save & Continue
                    </button>&nbsp;&nbsp;<span id="news-delete" class="btn btn-danger"><i class="fa fa-trash-o"></i> Delete</span>
                </div>
            </div>
            <div class="row">
                <div class="col-12 my-3">
                    <div class="tabs-wrapper">
                        <ul class="nav classic-tabs tabs-pink" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link waves-light active waves-effect waves-light" data-toggle="tab" href="#create-news" role="tab">
                                    <i class="fa fa-user fa-2x" aria-hidden="true"></i>
                                    <br> Update News
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link waves-light waves-effect waves-light" data-toggle="tab" href="#upload-pictures" role="tab">
                                    <i class="fa fa-file-picture-o fa-2x" aria-hidden="true"></i>
                                    <br>Pictures
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link waves-light waves-effect waves-light" data-toggle="tab" href="#upload-videos" role="tab">
                                    <i class="fa fa-file-video-o fa-2x" aria-hidden="true"></i>
                                    <br>Videos
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="tab-content card">
                        <div class="tab-pane fade in show active" id="create-news" role="tabpanel">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <button type="button" value="Add Video Resource" data-toggle="modal" data-target="#videoModal" class="btn btn-info mr-auto pull-right">
                                        <i class="fa fa-file-video-o">&nbsp;&nbsp;</i>Add Video Resource
                                    </button>
                                    <button type="button" value="Add Picture Resource" data-toggle="modal" data-target="#pictureModal" class="btn btn-info mr-auto pull-right">
                                        <i class="fa fa-file-picture-o">&nbsp;&nbsp;</i>Add Picture Resource
                                    </button>&nbsp;&nbsp;
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-md-6 mb-4">
                                    <div class="md-form">
                                        <i class="fa fa-play-circle-o prefix"></i>
                                        @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control", @tabindex = "1", @maxlength = "50" } })
                                        @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-md-10 mb-4">
                                    <div class="md-form">
                                        <i class="fa fa-html5 prefix"></i>
                                        @Html.EditorFor(model => model.Description, "HtmlEditor.cshtml")
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-md-6 mb-4">
                                    <div class="md-form">
                                        <i class="fa fa-user prefix"></i>
                                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", @tabindex = "3", @maxlength = "100" } })
                                        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-md-6 mb-4">
                                    <div class="md-form date start-date">
                                        <i class="fa fa-calendar prefix"></i>
                                        @Html.EditorFor(model => model.StartDate, "DateRange.cshtml")
                                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-md-6 mb-4">
                                    <div class="md-form date end-date">
                                        <i class="fa fa-calendar prefix"></i>
                                        @Html.EditorFor(model => model.EndDate, "DateRange.cshtml")
                                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-md-6 mb-4">
                                    <div class="md-form">
                                        <i class="fa fa-link prefix"></i>
                                        @Html.EditorFor(model => model.SystemName, new { htmlAttributes = new { @class = "form-control", @tabindex = "6", @maxlength = "50" } })
                                        @Html.LabelFor(model => model.SystemName, "System Name", htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.SystemName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-xs-12 col-md-4 mb-4">
                                    <div class="md-form">
                                        @Html.DropDownListFor(model => model.NewsStatusId, Model.AvailableStatuses, new { @class = "mdb-select colorful-select dropdown-primary", @tabindex = "7" })
                                        @Html.LabelFor(model => model.NewsStatusId, "Status", htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.NewsStatusId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-xs-12 col-md-4 mb-4">
                                    <div class="md-form">
                                        @Html.DropDownListFor(model => model.AcadmicYearId, Model.AvailableAcadmicYears, new { @class = "mdb-select colorful-select dropdown-primary", @tabindex = "8" })
                                        @Html.LabelFor(model => model.AcadmicYearId, "Acadmic Year", htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.AcadmicYearId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row text-left">
                                <div class="col-md-6 mb-4">
                                    <input type="checkbox" tabindex="9" id="IsActive" name="IsActive" value="@(Model.IsActive ? " True" : "False" )" @(Model.IsActive ? "checked=checked" : "" ) />
                                    @Html.LabelFor(model => model.IsActive, "Active", htmlAttributes: new { })
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="upload-pictures" role="tabpanel">
                            @Html.Partial("_NewsPictures", Model)
                        </div>
                        <div class="tab-pane" id="upload-videos" role="tabpanel">
                            @Html.Partial("_NewsVideos", Model)
                        </div>
                    </div>
                </div>
            </div>
            <!-- Picture Modal -->
            <div class="modal" id="pictureModal" tabindex="-1" role="dialog" aria-labelledby="modalPictures" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div style="background-color:#fff;" class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalPictures">Select Picture Resources</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div id="content-pictures" class="col-lg-12">
                                </div>
                            </div>
                            <div class="text-center">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" id="submit-picture" class="btn btn-primary"> Append To News Body <i class="fa fa-book ml-2" aria-hidden="true"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Video Modal -->
            <div class="modal" id="videoModal" tabindex="-1" role="dialog" aria-labelledby="modalVideos" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div style="background-color:#fff;" class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalVideos">Select Video Resources</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div id="content-videos" class="col-lg-12">
                                </div>
                            </div>
                            <div class="text-center">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" id="submit-video" class="btn btn-primary"> Append To News Body<i class="fa fa-book ml-2" aria-hidden="true"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }
        </section>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        if ($("#IsActive").val() == "True") {
            $("#IsActive").attr('checked', true).val(true);
        }
        else {
            $("#IsActive").attr('checked', false).val(false);
        }

        $("#IsActive").change(function () {
            if ($(this).prop('checked')) {
                $(this).attr('checked', true).val(true);
            }
            else {
                $(this).attr('checked', false).val(false);
            }
        });

        $("#pictureModal").on('show.bs.modal', function () {
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.Action("GetPictureResources", "Picture", new { @Area="Admin" }))",
                data: {},
            success: function (data, result) {
                if (result === "success") {
                    $("#content-pictures").html('');
                    var htmContent = '';
                    htmContent += '<table class="table table-bordered">';
                    htmContent += '<thead>';
                    htmContent += '<tr>';
                    htmContent += '<th></th><th>Picture</th><th>Url</th>';
                    htmContent += '</thead>';
                    htmContent += '<tbody id="picture-resources">';
                    for (var i = 0; i < data.length; i++) {
                        htmContent += '<tr data-url="' + data[i].Url + '">';
                        htmContent += '<th scope="row">';
                        htmContent += '<div class="custom-control custom-radio"><input type="radio" name="picture-resource" class="custom-control-input" value="' + data[i].Id + '" id="' + data[i].Id + '"><label class="custom-control-label" for="' + data[i].Id + '"></label></div>';
                        htmContent += '</th>';
                        htmContent += '<td><div class="thumb"><img src="' + row.PictureSrc + '" alt="" class="float-left"></div></td>';
                        htmContent += '<td style="word-wrap: break-word;word-break: break-all;">' + data[i].Url + '</td>';
                        htmContent += '</tr>';
                    }
                    htmContent += '</tbody>';
                    htmContent += '</table>';
                    $("#content-pictures").html(htmContent);
                    $('#pictureModal').modal('show');
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.responseText);
                setTimeout(function () {
                    $.gritter.add({
                        title: "Failure",
                        text: "Failed to load pictures!",
                        sticky: !0,
                        time: "",
                        class_name: "my-sticky-class"
                    });
                }, 1e3);
            }
        });
    });

    $("#videoModal").on('show.bs.modal', function () {
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.Action("GetVideoResources", "Video", new { @Area="Admin" }))",
            data: {},
        success: function (data, result) {
            if (result === "success") {
                $("#content-videos").html('');
                var htmContent = '';
                htmContent += '<table class="table table-bordered">';
                htmContent += '<thead>';
                htmContent += '<tr>';
                htmContent += '<th></th><th>Video</th><th>Url</th>';
                htmContent += '</thead>';
                htmContent += '<tbody id="video-resources">';
                for (var i = 0; i < data.length; i++) {
                    htmContent += '<tr data-url="' + data[i].Url + '">';
                    htmContent += '<th scope="row">';
                    htmContent += '<div class="custom-control custom-radio"><input type="radio" name="video-resource" class="custom-control-input" value="' + data[i].Id + '" id="' + data[i].Id + '"><label class="custom-control-label" for="' + data[i].Id + '"></label></div>';
                    htmContent += '</th>';
                    htmContent += '<td><video controls="controls" style="width:200px;" preload="auto" poster="@(basePath + "Content/images/video-poster.png")" playsinline muted><source src="' + data[i].VideoSrc + '" type="video/mp4"></video></td>';
                    htmContent += '<td style="word-wrap:break-word;word-break:break-all;">' + data[i].Url + '</td>';
                    htmContent += '</tr>';
                }
                htmContent += '</tbody>';
                htmContent += '</table>';
                $("#content-videos").html(htmContent);
                $('#videoModal').modal('show');
            }
        },
        error: function (xhr, ajaxOptions, thrownError) {
            console.log(xhr.responseText);
            setTimeout(function () {
                $.gritter.add({
                    title: "Failure",
                    text: "Failed to load videos!",
                    sticky: !0,
                    time: "",
                    class_name: "my-sticky-class"
                });
            }, 1e3);
        }
    });
    });

    $(document).on("change", "#content-pictures table tbody .custom-control-input[type=radio]", function () {});
    $(document).on("change", "#content-videos table tbody .custom-control-input[type=radio]", function () { });

    $(document).on("click","#submit-picture", function(){
        var checkedRecord = $('#pictureModal').find("table tbody input[type=radio]:checked");
        if(confirm("Are you sure, you want to append picture to selected news?")){
            var pictureUrl = $($(checkedRecord)[0]).closest('tr').data('url');
            tinyMCE.activeEditor.execCommand('mceInsertContent', false, '<img src=' + pictureUrl + ' />');
            var content = tinyMCE.activeEditor.getContent({ format: 'raw' });
            tinyMCE.activeEditor.setContent(content, { format: 'raw' });
            $('#pictureModal').modal('hide');
        }
    });

    $(document).on("click","#submit-video", function(){
        var checkedRecord = $('#videoModal').find("table tbody input[type=radio]:checked");
        if(confirm("Are you sure, you want to append video to selected news?")){
            var pictureUrl = $($(checkedRecord)[0]).closest('tr').data('url');
            tinyMCE.activeEditor.execCommand('mceInsertContent', false, '<video controls="controls" style="width:200px;" preload="auto" poster="@(basePath + "Content/images/video-poster.png")" playsinline muted><source src="' + pictureUrl + '" type="video/mp4"></video>');
            var content = tinyMCE.activeEditor.getContent({ format: 'raw' });
            tinyMCE.activeEditor.setContent(content, { format: 'raw' });
            $('#videoModal').modal('hide');
        }
    });

        $('#SystemName').on('input propertychange paste', function () {
            var parameters = {
                entityId: '@Model.Id',
                entityName: 'News',
                systemName: $(this).val()
            };
            warningValidation('@Url.Action("UrlReservedWarning", "News")', '#SystemName', parameters);
        });

        // Get the elements
        var from_input = $('.start-date input[type=text]').pickadate(),
            from_picker = from_input.pickadate('picker');
        var to_input = $('.end-date input[type=text]').pickadate(),
            to_picker = to_input.pickadate('picker');

        // Check if there’s a “from” or “to” date to start with and if so, set their appropriate properties.
        if (from_picker.get('value')) {
            to_picker.set('min', from_picker.get('select'));
        }
        if (to_picker.get('value')) {
            from_picker.set('max', to_picker.get('select'));
        }

        // Apply event listeners in case of setting new “from” / “to” limits to have them update on the other end. If ‘clear’ button is pressed, reset the value.
        from_picker.on('set',
            function (event) {
                if (event.select) {
                    to_picker.set('min', from_picker.get('select'));
                } else if ('clear' in event) {
                    to_picker.set('min', false);
                }
            });
        to_picker.on('set',
            function (event) {
                if (event.select) {
                    from_picker.set('max', to_picker.get('select'));
                } else if ('clear' in event) {
                    from_picker.set('max', false);
                }
            });
    });
</script>
@Html.DeleteConfirmation("news-delete")
