@model IEnumerable<SMS.Areas.Admin.Models.PermissionModel>
@using EF.Services;
@{
    ViewBag.Title = "Permissions";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
<script type="text/javascript">
    $(document).ready(function () {
        // Initiallize Footable
        $('table').DataTable({

	        "processing": true, // for show progress bar  
	        "serverSide": true, // for process server side  
	        "filter": true, // this is for disable filter (search box)  
	        "orderMulti": false, // for disable multiple column at once  
	        "pageLength": 5,

	        "ajax": {
		        "url": "/Demo/LoadData",
		        "type": "POST",
		        "datatype": "json"
	        },

	        "columnDefs":
	        [{
			        "targets": [0],
			        "visible": false,
			        "searchable": false
		        },
		        {
			        "targets": [7],
			        "searchable": false,
			        "orderable": false
		        },
		        {
			        "targets": [8],
			        "searchable": false,
			        "orderable": false
		        },
		        {
			        "targets": [9],
			        "searchable": false,
			        "orderable": false
		        }],

	        "columns": [
		        { "data": "CustomerID", "name": "CustomerID", "autoWidth": true },
		        { "data": "CompanyName", "name": "CompanyName", "autoWidth": true },
		        { "data": "ContactName", "title": "ContactName", "name": "ContactName", "autoWidth": true },
		        { "data": "ContactTitle", "name": "ContactTitle", "autoWidth": true },
		        { "data": "City", "name": "City", "autoWidth": true },
		        { "data": "PostalCode", "name": "PostalCode", "autoWidth": true },
		        { "data": "Country", "name": "Country", "autoWidth": true },
		        { "data": "Phone", "name": "Phone", "title": "Status", "autoWidth": true },
		        {
			        "render": function (data, type, full, meta)
				        { return '<a class="btn btn-info" href="/Demo/Edit/' + full.CustomerID + '">Edit</a>'; }
		        },
		        {
			        data: null, render: function (data, type, row) {
				        return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.CustomerID + "'); >Delete</a>";
			        }
		        }
	        ]
        });
    });
</script>
<div class="col-xs-12 col-md-12">
    <div class="input-group pull-right">
        @Html.ActionLink("Create Permission", "Create", "Permission", null, new { @class = "btn btn-primary" })<text>&nbsp;&nbsp;&nbsp;</text> <button class="btn btn-danger" type="button" id="delete-selected"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;&nbsp;Delete</button>
    </div>
</div>
<div class="clearfix"></div>
<div class="col-xs-12 col-md-12">
    <br />
    <div id="permissions-table" class="form-group">
        <table class="table custom-table" data-sorting="true" data-paging="true" data-page-size="10">
            <thead>
                <tr>
                    <th data-visible="false" data-class="expand" data-sortable="false"><input type="checkbox" id="allcheck" /></th>
                    <th>Name</th>
                    <th data-breakpoints="xs sm md" data-title="System Name">System Name</th>
                    <th data-breakpoints="xs sm md" data-title="Category" data-sortable="false" >Category</th>
                    <th data-breakpoints="xs sm md" data-title="System" data-sortable="false" >System Defined</th>
                    <th data-sortable="false" data-sort-ignore="true">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var eve in Model)
                {
                    <tr>
                        <td align="center"><input type="checkbox" class="checkboxGroups" value="@eve.Id" /></td>
                        <td align="center">@eve.Name</td>
                        <td align="center">@eve.SystemName</td>
                        <td align="center">@eve.Category</td>
                        <td>
                            @if (eve.IsSystemDefined)
                            { <i style="font-size:24px;" class="glyphicon glyphicon-ok"></i> }
                            else
                            { <i style="font-size:24px;" class="glyphicon glyphicon-remove"></i> }
                        </td>
                        <td align="center"><a class="btn btn-link" href="@Url.Action("Edit", "Permission", new { @id = eve.Id })" id="@("edit_" + eve.Id)" title="Edit"><i class="glyphicon glyphicon-pencil"></i></a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="clearfix"></div>
    <div class="alert alert-info">
        <strong>Info!</strong> System defined permissions cannot be deleted.
    </div>
<script type="text/javascript">
    var selectedIds = [];
    $(document).ready(function () {
        //delete selected
        $('#delete-selected').click(function (e) {
            e.preventDefault();
            var postData = {
                selectedIds: selectedIds
            };
            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("DeleteSelected", "Permission"))",
                data: postData,
                complete: function (data) {
                    alert("Permissions Deleted Successfully.");
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(thrownError);
                },
                traditional: true
            });
            return false;
        });

    	$(document).on('click', '#allcheck', function () {
    		$('.checkboxGroups').prop('checked', $(this).is(':checked')).change();
    	});

        //wire up checkboxes.
        $('#permissions-table').on('change', 'input[type=checkbox][id!=allcheck]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
    });

    function updateMasterCheckbox() {
        var numChkBoxes = $('#permissions-table input[type=checkbox][id!=allcheck]').length;
        var numChkBoxesChecked = $('#permissions-table input[type=checkbox][id!=allcheck]:checked').length;
        $('#allcheck').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
    }
</script>
}
