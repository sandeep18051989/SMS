@model int
@using EF.Services.Http;
@using System.Drawing.Imaging;
@using EF.Services.Service;
@{
    <link rel="stylesheet" type="text/css" href="~/Areas/Admin/Content/fineuploader.min.css" />
    <script type="text/javascript" src="~/Areas/Admin/Scripts/fineuploader.min.js"></script>
    var random = EF.Services.CodeHelper.GenerateRandomInteger();
    var basePath = EF.Core.ContextHelper.Current.Resolve<IUrlHelper>().GetLocation(false);
    var pictureService = EF.Core.ContextHelper.Current.Resolve<IPictureService>();
    string pictureSrc = basePath + "Content/images/image-placeholder100x100.jpg";
    if (Model > 0)
    {
        var pictureSource = pictureService.GetPictureById(Model);
        var bitMapImage = pictureService.ConvertBase64IntoImage(pictureSource.PictureSrc.Replace("data:image/jpeg;base64,", ""));
        var resizedImage = pictureService.ResizeImage(bitMapImage, 100, 100);
        pictureSrc = pictureService.ImageToBase64String(resizedImage, ImageFormat.Jpeg);
    }
    var clientId = "picture" + random;
}
<div class="row-fluid">
    <div id="picture-preview" class="text-center">
        <div class="md-form">
            <div class="file-field upload-preview">
                <div id="@(clientId + "image")" class="@(Model)-uploaded-image mb-2">
                    <img src="@(pictureSrc)" class="img-fluid" alt="" />
                </div>
                @if (Model > 0)
                {
                    <span id="@(clientId + "remove")" class="btn btn-danger btn-rounded waves-effect waves-light @(Model)-btn-remove-picture">X</span>
                }
                else
                {
                    <span id="@(clientId + "remove")" class="btn btn-danger btn-rounded waves-effect waves-light 0-btn-remove-picture" style="display: none;">X</span>
                }
            </div>
        </div>
    </div>
</div>
<div id="@(clientId + "value")">
    @Html.HiddenFor(x => x, new { @data_element=clientId })
</div>
<div class="row">
    <div class="col-md-12 text-center">
        <div id="@clientId" class="upload-image-button uploader margin-t-5">
            <noscript>
                <p>Please enable JavaScript to use file uploader.</p>
            </noscript>
        </div>
    </div>
</div>
<script type="text/template" data-identity="@(clientId)" id="@(clientId)-qq-template">
    <div class="row-fluid qq-uploader-selector qq-uploader">
        <div class="col-md-12">
            <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
                <span>Drop Files</span>
            </div>
            <div class="btn qq-upload-button-selector qq-upload-button btn-mdb-color btn-rounded waves-effect waves-light">
                <div>Upload Picture</div>
            </div>
            <span class="qq-drop-processing-selector qq-drop-processing">
                <span>Processing</span>
                <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
            </span>
            <ul class="qq-upload-list-selector qq-upload-list">
                <li>
                    <div class="qq-progress-bar-container-selector">
                        <div class="qq-progress-bar-selector qq-progress-bar"></div>
                    </div>
                    <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                    <span class="qq-edit-filename-icon-selector qq-edit-filename-icon"></span>
                    <span class="qq-upload-file-selector qq-upload-file"></span>
                    <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                    <span class="qq-upload-size-selector qq-upload-size"></span>
                    <a class="qq-upload-cancel-selector qq-upload-cancel" href="#">Cancel</a>
                    <a class="qq-upload-retry-selector qq-upload-retry" href="#">Retry</a>
                    <a class="qq-upload-delete-selector qq-upload-delete" href="#">Delete</a>
                    <span class="qq-upload-status-text-selector qq-upload-status-text"></span>
                </li>
            </ul>
        </div>
    </div>
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#@(clientId)").fineUploader({
            request: {
                endpoint: '@(Url.Action("AsyncPictureUpload","Picture", new { Area="admin"}))'
            },
            failedUploadTextDisplay: {
                mode: 'custom',
                maxChars: 40,
                responseProperty: 'error',
                enableTooltip: true
            },
            validation: {
                allowedExtensions: ['jpg', 'jpeg', 'png', 'gif', 'bmp'],
                sizeLimit: 5100000
            },
            template: "@(clientId)-qq-template",
            multiple: false,
            callbacks: {
                onReset: function () {
                    alert('1');
                }
            }
        }).on("complete", function (event, id, name, responseJSON, xhr) {
            if (responseJSON.success) {
                $("#@(clientId + "value") input").val(responseJSON.PictureId);
                $("#@(clientId + "image")").html("<img class='img-fluid' alt='' src='" + responseJSON.Picture + "'/>");
                $("button[data-resource='picture']").removeAttr("disabled");
                $("#@(clientId + "remove")").show();
            }
        });
        $("#@(clientId + "remove")").click(function (e) {
            $("button[data-resource='picture']").attr("disabled", true);
            $("#@(clientId + "image")").html("<img class='img-fluid' alt='' src='@(basePath)Content/images/image-placeholder100x100.jpg'/>");
            $("#@(clientId + "value") input").val(0);
            $('.uploader').fineUploader('reset');
            $(this).hide();
        });
    });
</script>
