@model IEnumerable<SMS.Models.EventModel>
@using EF.Services;
@{
    ViewBag.Title = "Events";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">Events</h3>
    </div>
    <div class="col-md-7 align-self-center">
        @Html.Raw(Html.BuildBreadcrumbNavigation())
    </div>
</div>
<div class="row">
    <div class="col-md-12 mr-4">
        <section class="list-form">
            @using (Html.BeginForm())
            {
                <div class="row">
                    <div class="col-xs-12 col-md-12">
                        <div class="input-group pull-right">
                            @Html.ActionLink("Create Event", "Create", "Event", null, new { @class = "btn btn-primary" })
                            <text>&nbsp;&nbsp;</text>
                            <button class="btn btn-danger" type="button" id="delete-selected"><i class="fa fa-trash"></i>&nbsp;&nbsp;&nbsp;Delete</button>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <br />
                        <div class="form-group">
                            <table cellspacing="0" class="table display table-striped w-auto text-nowrap custom-table" style="width: 100% !important;">
                                <thead>
                                    <tr>
                                        <th class="no-sort"><div class="form-check"><input type="checkbox" id="allcheck" value="allcheck" /><label for="allcheck"></label></div></th>
                                        <th class="text-center">Title</th>
                                        <th class="text-center">Start Date</th>
                                        <th class="text-center">End Date</th>
                                        <th class="text-center">Venue</th>
                                        <th class="text-center">Approved</th>
                                        <th class="text-center">Active</th>
                                        <th class="text-center">Comments</th>
                                        <th class="text-center">Pictures</th>
                                        <th class="text-center">Videos</th>
                                        <th class="text-center">Reactions</th>
                                        <th class="text-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>}
        </section>
    </div>
</div>
<script type="text/javascript">
    var selectedIds = [];
    $(document).ready(function () {
        $("li#events ul").css("height", "");
        // Initiallize Datatable
        var table = $('.custom-table').DataTable({
            "processing": true, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "pageLength": 25,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            "ajax": {
                "url": "/Admin/Event/LoadGrid",
                "type": "POST",
                "datatype": "json"
            },
            "aaSorting": [],
            "columns": [
				{
				    'searchable': false,
				    "title": "",
				    "data": "",
				    "render": function (data, type, row) {
				        if (type === "display") {
				            return '<div class="form-check"><input type="checkbox" name="selectedids" ' +
                                ' class="form-check-input checkboxGroups" value="' +
                                row.Id +
                                '" id="' +
                                row.Id +
                                '"><label class="form-check-label" for="' +
                                row.Id +
                                '"></label></div>';
				        }
				        return data;
				    },
				    "orderable": false,
				    "className": 'text-center',
				    "defaultContent": ""
				},
				{
				    "data": "Title", "title": "Name", "name": "Title", "autoWidth": true,
				    "defaultContent": ""
				},
				{
				    "data": "StartDate", "title": "Start Date", "name": "StartDate", "autoWidth": true, "orderable": false,
				    "defaultContent": ""
				},
				{
				    "data": "EndDate", "title": "End Date", "name": "EndDate", "autoWidth": true, "orderable": false,
				    "defaultContent": ""
				},
				{
				    "data": "Venue", "title": "Location", "name": "Venue", "autoWidth": true, "orderable": true,
				    "defaultContent": ""
				},
				{
				    "data": "IsApproved",
				    "title": "Approved",
				    "render": function (data, type, row) {
				        if (type === "display") {
				            if (row.IsApproved) {
				                return '<a href="javascript:void(0);" id="' + row.Id + '" class="approve_' +
                                    row.Id +
                                    '" data-operation="disapprove" data-id="' +
                                    row.Id +
                                    '" title="Disapprove Event"><i class="fa fa-2x fa-check-circle" aria-hidden="true"></i></a>';
				            } else {
				                return '<a href="javascript:void(0);" id="' + row.Id + '" class="approve_' +
                                    row.Id +
                                    '" data-operation="approve" data-id="' +
                                    row.Id +
                                    '" title="Approve Event"><i class="fa fa-2x fa-close" aria-hidden="true"></i></a>';
				            }
				        }
				        return data;
				    },
				    "className": "text-center",
				    "orderable": false,
				    "defaultContent": ""
				},
				{
				    "data": "IsActive",
				    "title": "Active",
				    "render": function (data, type, row) {
				        if (type === "display") {
				            if (row.IsActive) {
				                return '<a href="javascript:void(0);" id="' + row.Id + '" class="toggle_' +
                                    row.Id +
                                    '" data-operation="deactivate" data-id="' +
                                    row.Id +
                                    '" title="Deactivate Event"><i class="fa fa-2x fa-check-circle" aria-hidden="true"></i></a>';
				            } else {
				                return '<a href="javascript:void(0);" id="' + row.Id + '" class="toggle_' +
                                    row.Id +
                                    '" data-operation="activate" data-id="' +
                                    row.Id +
                                    '" title="Activate Event"><i class="fa fa-2x fa-close" aria-hidden="true"></i></a>';
				            }
				        }
				        return data;
				    },
				    "className": "text-center",
				    "orderable": false,
				    "defaultContent": ""
				},
				{
				    "title": "Comments",
				    "orderable": false,
				    "className": 'text-center',
				    "render": function (data, type, row) {
				        if (type === "display") {
				            return '<div id="other-related-stats"><span><i class="fa fa-2x fa-comment" aria-hidden="true"></i><span class="badge up badge-danger">' + row.CommentsCount + '</span></span>';
				        }
				        return data;
				    },
				    "defaultContent": ""
				},
				{
				    "title": "Pictures",
				    "orderable": false,
				    "className": 'text-center',
				    "render": function (data, type, row) {
				        if (type === "display") {
				            return '<span><i class="fa fa-2x fa-picture-o" aria-hidden="true"></i><span class="badge up badge-danger">' + row.PicturesCount + '</span></span>';
				        }
				        return data;
				    },
				    "defaultContent": ""
				},
				{
				    "title": "Videos",
				    "orderable": false,
				    "className": 'text-center',
				    "render": function (data, type, row) {
				        if (type === "display") {
				            return '<span><i class="fa fa-2x fa-video-camera" aria-hidden="true"></i><span class="badge up badge-danger">' + row.VideosCount + '</span></span>';
				        }
				        return data;
				    },
				    "defaultContent": ""
				},
				{
				    "title": "Reactions",
				    "orderable": false,
				    "className": 'text-center',
				    "render": function (data, type, row) {
				        if (type === "display") {
				            return '<span><i class="fa fa-2x fa fa-comments-o" aria-hidden="true"></i><span class="badge up badge-danger">' + row.ReactionsCount + '</span></span></div>';
				        }
				        return data;
				    },
				    "defaultContent": ""
				},
				{
				    "title": "Actions",
				    "orderable": false,
				    "className": 'text-center',
				    "render": function (data, type, row) {
				        if (type === "display") {
				            return '<a href="/Admin/Event/Edit?id=' + row.Id + '" id="edit_' + row.Id + '" title="Edit"><i class="fa fa-2x fa-pencil-square-o" aria-hidden="true"></i></a>&nbsp;&nbsp;<a id="eventid_' + row.Id + '" href="javascript:void(0);" title="Delete"><i class="fa fa-2x fa-trash-o" aria-hidden="true"></i></a>';
				        }
				        return data;
				    },
				    "defaultContent": ""
				}
            ],
            "select": {
                "style": 'os',
                "selector": 'td:first-child'
            }
        });

        $(document).on('click', '#allcheck', function () {
            $('.checkboxGroups').prop('checked', $(this).is(':checked')).change();
        });

        //wire up checkboxes.
        $('.custom-table tbody').on('change', 'input[type=checkbox][id!=allcheck]', function (e) {
            var $check = $(this);
            var checked;
            if ($check.is(":checked") === true) {
                checked = jQuery.inArray($check.val(), selectedIds);
                if (checked === -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });

        $('a[class^="approve_"]').click(function (e) {
            if (confirm("Are you sure, you want to update status for the selected event?")) {
                e.preventDefault();
                var postData = {
                    id: $(this).attr("id")
                };
                addAntiForgeryToken(postData);

                var operation = $(this).attr('data-operation').trim().toLowerCase();
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("ToggleApproveStatusEvent", "Event"))",
                    data: postData,
                    success: function (data, result) {
                        if (result === "success") {
                            setTimeout(function () {
                                $.gritter.add({
                                    title: "Success",
                                    text: "Event Updated Successfully!",
                                    sticky: !0,
                                    time: "",
                                    class_name: "my-sticky-class"
                                });
                            },
                                1e3);
                            $('.custom-table').DataTable().ajax.reload();
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                        setTimeout(function () {
                            $.gritter.add({
                                title: "Failure",
                                text: xhr.responseText,
                                sticky: !0,
                                time: "",
                                class_name: "my-sticky-class"
                            });
                        },
                            1e3);
                    },
                    traditional: true
                });
            }
            return false;
        });

        $('a[class^="toggle_"]').click(function (e) {
            if (confirm("Are you sure, you want to update status for the selected event?")) {
                e.preventDefault();
                var postData = {
                    id: $(this).attr("id")
                };
                addAntiForgeryToken(postData);

                var operation = $(this).attr('data-operation').trim().toLowerCase();
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("ToggleActiveStatusEvent", "Event"))",
                    data: postData,
                    success: function (data, result) {
                        if (result === "success") {
                            setTimeout(function () {
                                $.gritter.add({
                                    title: "Success",
                                    text: "Event Updated Successfully!",
                                    sticky: !0,
                                    time: "",
                                    class_name: "my-sticky-class"
                                });
                            },
                                1e3);
                            $('.custom-table').DataTable().ajax.reload();
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                        setTimeout(function () {
                            $.gritter.add({
                                title: "Failure",
                                text: xhr.responseText,
                                sticky: !0,
                                time: "",
                                class_name: "my-sticky-class"
                            });
                        },
                            1e3);
                    },
                    traditional: true
                });
            }
            return false;
        });

        //delete selected
        $('#delete-selected').click(function (e) {
            if (selectedIds.length > 0) {
                e.preventDefault();
                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("DeleteSelected", "Event"))",
                    data: postData,
                    success: function (data, result) {
                        if (result === "success") {
                            setTimeout(function () {
                                $.gritter.add({
                                    title: "Success",
                                    text: "Events Deleted Successfully!",
                                    sticky: !0,
                                    time: "",
                                    class_name: "my-sticky-class"
                                });
                            }, 1e3);
                            $('.custom-table').DataTable().ajax.reload();
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.responseText);
                        setTimeout(function () {
                            $.gritter.add({
                                title: "Failure",
                                text: xhr.responseText,
                                sticky: !0,
                                time: "",
                                class_name: "my-sticky-class"
                            });
                        }, 1e3);
                    },
                    traditional: true
                });
            }
            else {
                setTimeout(function () {
                    $.gritter.add({
                        title: "Failure",
                        text: "Please select atleast one record",
                        sticky: !0,
                        time: "",
                        class_name: "my-sticky-class"
                    });
                },
                1e3);
            }
            return false;
        });
    });

    function updateMasterCheckbox() {
        var numChkBoxes = $('.custom-table input[type=checkbox][id!=allcheck]').length;
        var numChkBoxesChecked = $('.custom-table input[type=checkbox][id!=allcheck]:checked').length;
        $('#allcheck').attr('checked', numChkBoxes === numChkBoxesChecked && numChkBoxes > 0);
    }
</script>