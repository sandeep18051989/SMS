@model IEnumerable<SMS.Areas.Admin.Models.FeedbackModel>

@{
	ViewBag.Title = "Queries";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="col-xs-12 col-md-12">
	<h3 style="text-align:left;font-weight:bold;">Queries</h3>
</div>
<div class="clearfix"></div>
<div class="col-xs-12 col-md-12">
	<div class="input-group pull-right">
		<button class="btn btn-danger" type="button" id="delete-selected"><i class="fa fa-trash-o"></i>&nbsp;&nbsp;&nbsp;Delete</button>
	</div>
</div>
<div class="clearfix"></div>
<div class="col-xs-12 col-md-12">
	<br />
	<div id="query-tbl" class="form-group">
		<table class="table custom-table" data-sorting="true" data-paging="true" data-page-size="10">
			<thead>
				<tr>
					<th data-visible="false" data-class="expand" data-sortable="false"><input type="checkbox" id="allcheck" /></th>
					<th>Full Name</th>
					<th data-breakpoints="xs sm md" data-title="Location">Location</th>
					<th data-breakpoints="xs sm md" data-title="Email" data-sort-ignore="true">Email</th>
					<th data-breakpoints="xs sm md" data-title="Contact" data-sortable="false" data-sort-ignore="true">Contact Number</th>
					<th data-breakpoints="xs sm md" data-title="Query" data-sortable="false" data-sort-ignore="true">Query</th>
					<th data-breakpoints="xs sm md" data-title="Date" data-sortable="false" data-sort-ignore="true">Date</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var feed in Model)
				{
					<tr>
						<td align="center"><input type="checkbox" class="checkboxGroups" value="@feed.Id" /></td>
						<td align="center">@feed.Name</td>
						<td align="center">@feed.Location</td>
						<td align="center">@feed.EmailAddress</td>
						<td>@feed.ContactNumber</td>
						<td>@Html.Raw(feed.Description)</td>
						<td>@feed.Date</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>
<div class="clearfix"></div>
@*}*@
<script type="text/javascript">
	var selectedIds = [];
	$(document).ready(function () {
		// Initiallize Footable
		$('table').DataTable({

			"processing": true, // for show progress bar  
			"serverSide": true, // for process server side  
			"filter": true, // this is for disable filter (search box)  
			"orderMulti": false, // for disable multiple column at once  
			"pageLength": 5,

			"ajax": {
				"url": "/Demo/LoadData",
				"type": "POST",
				"datatype": "json"
			},

			"columnDefs":
			[{
					"targets": [0],
					"visible": false,
					"searchable": false
				},
				{
					"targets": [7],
					"searchable": false,
					"orderable": false
				},
				{
					"targets": [8],
					"searchable": false,
					"orderable": false
				},
				{
					"targets": [9],
					"searchable": false,
					"orderable": false
				}],

			"columns": [
				{ "data": "CustomerID", "name": "CustomerID", "autoWidth": true },
				{ "data": "CompanyName", "name": "CompanyName", "autoWidth": true },
				{ "data": "ContactName", "title": "ContactName", "name": "ContactName", "autoWidth": true },
				{ "data": "ContactTitle", "name": "ContactTitle", "autoWidth": true },
				{ "data": "City", "name": "City", "autoWidth": true },
				{ "data": "PostalCode", "name": "PostalCode", "autoWidth": true },
				{ "data": "Country", "name": "Country", "autoWidth": true },
				{ "data": "Phone", "name": "Phone", "title": "Status", "autoWidth": true },
				{
					"render": function (data, type, full, meta)
						{ return '<a class="btn btn-info" href="/Demo/Edit/' + full.CustomerID + '">Edit</a>'; }
				},
				{
					data: null, render: function (data, type, row) {
						return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.CustomerID + "'); >Delete</a>";
					}
				}
			]
		});

		//delete selected
		$('#delete-selected').click(function (e) {
			if (selectedIds.length > 0) {
				e.preventDefault();
				var postData = {
					selectedIds: selectedIds
				};
				addAntiForgeryToken(postData);

				$.ajax({
					cache: false,
					type: "POST",
					url: "@(Url.Action("DeleteSelected", "Feedback"))",
					data: postData,
					complete: function (data) {
						location.reload();
					},
					error: function (xhr, ajaxOptions, thrownError) {
						alert(thrownError);
					},
					traditional: true
				});
				return false;
			}
		});

		$(document).on('click', '#allcheck', function () {
			$('.checkboxGroups').prop('checked', $(this).is(':checked')).change();
		});

		//wire up checkboxes.
		$('#query-tbl').on('change', 'input[type=checkbox][id!=allcheck]', function (e) {
			var $check = $(this);
			if ($check.is(":checked") == true) {
				var checked = jQuery.inArray($check.val(), selectedIds);
				if (checked == -1) {
					//add id to selectedIds.
					selectedIds.push($check.val());
				}
			}
			else {
				var checked = jQuery.inArray($check.val(), selectedIds);
				if (checked > -1) {
					//remove id from selectedIds.
					selectedIds = $.grep(selectedIds, function (item, index) {
						return item != $check.val();
					});
				}
			}
			updateMasterCheckbox();
		});
	});

	function updateMasterCheckbox() {
		var numChkBoxes = $('#query-tbl input[type=checkbox][id!=allcheck]').length;
		var numChkBoxesChecked = $('#query-tbl input[type=checkbox][id!=allcheck]:checked').length;
		$('#allcheck').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
	}
</script>