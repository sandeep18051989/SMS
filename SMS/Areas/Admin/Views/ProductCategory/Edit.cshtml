@model SMS.Models.ProductCategoryModel
@using EF.Services;
@{
    ViewBag.Title = "Update Product Category";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">Update Product Category</h3>
    </div>
    <div class="col-md-7 align-self-center">
        @Html.Raw(Html.BuildBreadcrumbNavigation())
    </div>
</div>
<div class="row">
    <div class="col-md-12 mr-4">
        <section class="edit-form">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                <div class="row">
                    <div id="admin-page-header" class="col-xs-12 col-md-12">
                        <button type="submit" name="save" class="btn btn-primary mr-auto">
                            <i class="fa fa-save">&nbsp;&nbsp;</i>Save
                        </button>&nbsp;&nbsp;
                        <button type="submit" value="Create" name="save-continue" class="btn btn-primary mr-auto">
                            <i class="fa fa-save">&nbsp;&nbsp;</i>Save & Continue
                        </button>&nbsp;&nbsp;<span id="productcategory-delete" class="btn btn-danger"><i class="fa fa-trash-o"></i> Delete</span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 my-3">
                        <div class="tabs-wrapper">
                            <ul class="nav classic-tabs tabs-pink" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link waves-light active waves-effect waves-light" data-toggle="tab" href="#create-category" role="tab">
                                        <i class="fa fa-user fa-2x" aria-hidden="true"></i>
                                        <br> Update Product Category
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link waves-light waves-effect waves-light" data-toggle="tab" href="#add-products" role="tab">
                                        <i class="fa fa-file-picture-o fa-2x" aria-hidden="true"></i>
                                        <br> Products
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="tab-content card">
                            <div class="tab-pane fade in show active" id="create-category" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-12">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    <span><i class="fa fa-image"></i>&nbsp;Picture</span>
                                                    @Html.EditorFor(model => model.PictureId, "Picture")
                                                    @Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @tabindex = "2", @maxlength = "200", @title = "Name" } })
                                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label", @data_error = "wrong", @data_success = "right" })
                                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.TextAreaFor(model => model.Description, new { @class = "md-textarea form-control", @tabindex = "3", @maxlength = "500", @rows = "3", @type = "text" })
                                                    @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-xs-12 col-md-4 mb-4">
                                                <div class="md-form">
                                                    @Html.DropDownListFor(model => model.ParentCategoryId, Model.AvailableProductCategories, "Select Parent Category", new { @class = "mdb-select colorful-select dropdown-primary", @tabindex = "4" })
                                                    @Html.LabelFor(model => model.ParentCategoryId, htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.ParentCategoryId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.EditorFor(model => model.SystemName, new { htmlAttributes = new { @class = "form-control", @tabindex = "5", @maxlength = "50" } })
                                                    @Html.LabelFor(model => model.SystemName, "System Name", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.SystemName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-left">
                                            <div class="col-md-6 mb-4">
                                                <div class="md-form">
                                                    @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control", @tabindex = "6", @min = "0", @maxlength = "50" } })
                                                    @Html.LabelFor(model => model.DisplayOrder, "Display Order", htmlAttributes: new { @class = "control-label" })
                                                    @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 mb-4">
                                                <input type="checkbox" tabindex="7" id="IncludeInTopMenu" name="IncludeInTopMenu" value="@(Model.IncludeInTopMenu ? "True" : "False")" @(Model.IncludeInTopMenu ? "checked=checked" : "") />
                                                @Html.LabelFor(model => model.IncludeInTopMenu, "Include In Top Menu", htmlAttributes: new { })
                                                @Html.ValidationMessageFor(model => model.IncludeInTopMenu, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 mb-4">
                                                <input type="checkbox" tabindex="8" id="IsActive" name="IsActive" value="@(Model.IsActive ? "True" : "False")" @(Model.IsActive ? "checked=checked" : "") />
                                                @Html.LabelFor(model => model.IsActive, "Active", htmlAttributes: new { })
                                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="add-products" role="tabpanel">
                                @Html.Partial("_CategoryProducts", Model)
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Modal -->
                <div class="modal" id="productModal" tabindex="-1" role="dialog" aria-labelledby="modalDivisions" aria-hidden="true">
                    <div class="modal-dialog modal-lg" role="document">
                        <div style="background-color:#fff;" class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title text-dark" id="modalDivisions">Select Products</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div id="content-body" class="col-lg-12">
                                    </div>
                                </div>
                                <div class="text-center">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="button" id="submit-associated-data" class="btn btn-primary"> Add To Category <i class="fa fa-book ml-2" aria-hidden="true"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </section>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        if ($("#IsActive").val() == "True") {
            $("#IsActive").attr('checked', true).val(true);
        }
        else {
            $("#IsActive").attr('checked', false).val(false);
        }

        $("#IsActive").change(function () {
            if ($(this).prop('checked')) {
                $(this).prop('checked', true).val(true);
            }
            else {
                $(this).prop('checked', false).val(false);
            }
        });

        if ($("#IncludeInTopMenu").val() == "True") {
            $("#IncludeInTopMenu").attr('checked', true).val(true);
        }
        else {
            $("#IncludeInTopMenu").attr('checked', false).val(false);
        }

        $("#IncludeInTopMenu").change(function () {
            if ($(this).prop('checked')) {
                $(this).prop('checked', true).val(true);
            }
            else {
                $(this).prop('checked', false).val(false);
            }
        });

        $('#SystemName').on('input propertychange paste', function () {
            var parameters = {
                entityId: '@Model.Id',
                entityName: 'ProductCategory',
                systemName: $(this).val()
            };
            warningValidation('@Url.Action("UrlReservedWarning", "ProductCategory")', '#SystemName', parameters);
        });
    });
</script>
@Html.DeleteConfirmation("productcategory-delete")
