@model SMS.Models.ClassRoomDivisionModel
@using EF.Services;
@{
    ViewBag.Title = "Class-Division";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-md-12 mr-4">
        <section class="edit-form">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                <div class="row">
                    <div id="admin-page-header" class="col-xs-12 col-md-12">
                        <h3 class="section-heading mr-auto">CLASS-DIVISION</h3>
                        @Html.ActionLink("Back To List", "Divisions", "ClassRoomDivision", new { @class = "btn btn-primary mr-auto" })
                        &nbsp;&nbsp;
                        <span id="classdivision-delete" class="btn btn-danger"><i class="fa fa-trash-o"></i> Delete</span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 my-3">
                        <div class="tabs-wrapper">
                            <ul class="nav classic-tabs tabs-pink" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link waves-light active waves-effect waves-light" data-toggle="tab" href="#update-classdivision" role="tab">
                                        <i class="fa fa-user fa-2x" aria-hidden="true"></i>
                                        <br> Class-Division
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link waves-light waves-effect waves-light" data-toggle="tab" href="#update-subjects" role="tab">
                                        <i class="fa fa-file-picture-o fa-2x" aria-hidden="true"></i>
                                        <br> Subjects
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link waves-light waves-effect waves-light" data-toggle="tab" href="#update-exams" role="tab">
                                        <i class="fa fa-file-video-o fa-2x" aria-hidden="true"></i>
                                        <br> Exams
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link waves-light waves-effect waves-light" data-toggle="tab" href="#update-homeworks" role="tab">
                                        <i class="fa fa-file-video-o fa-2x" aria-hidden="true"></i>
                                        <br> Homeworks
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link waves-light waves-effect waves-light" data-toggle="tab" href="#update-students" role="tab">
                                        <i class="fa fa-file-video-o fa-2x" aria-hidden="true"></i>
                                        <br> Students
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="tab-content card">
                            <div class="tab-pane fade in show active" id="update-classdivision" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-12">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row text-left">
                                    <div class="col-md-4 mb-4">
                                        <div class="md-form">
                                            <i class="fa fa-play-circle-o prefix"></i>
                                            @Html.DisplayFor(model => model.Class, new { htmlAttributes = new { @class = "form-label" } })
                                            @Html.LabelFor(model => model.Class, "Class", htmlAttributes: new { @class = "control-label" })
                                        </div>
                                    </div>
                                    <div class="col-md-4 mb-4">
                                        <div class="md-form">
                                            <i class="fa fa-play-circle-o prefix"></i>
                                            @Html.DisplayFor(model => model.Division, new { htmlAttributes = new { @class = "form-label" } })
                                            @Html.LabelFor(model => model.Division, "Division", htmlAttributes: new { @class = "control-label" })
                                        </div>
                                    </div>
                                    <div class="col-md-4 mb-4">
                                        <div class="md-form">
                                            <i class="fa fa-play-circle-o prefix"></i>
                                            @Html.DisplayFor(model => model.ClassRoom, new { htmlAttributes = new { @class = "form-label" } })
                                            @Html.LabelFor(model => model.ClassRoom, "Class Room", htmlAttributes: new { @class = "control-label" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="update-subjects" role="tabpanel">
                                @Html.Partial("_ClassRoomDivisionSubjects", Model)
                            </div>
                            <div class="tab-pane" id="update-exams" role="tabpanel">
                                @Html.Partial("_ClassRoomDivisionExams", Model)
                            </div>
                            <div class="tab-pane" id="update-homeworks" role="tabpanel">
                                @Html.Partial("_ClassRoomDivisionHomeworks", Model)
                            </div>
                            <div class="tab-pane" id="update-students" role="tabpanel">
                                @Html.Partial("_ClassRoomDivisionStudents", Model)
                            </div>
                        </div>
                    </div>
                </div>}
        </section>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("li.nav-item").removeClass("active");
        $("span.nav-title:contains('Divisions')").closest("li").addClass("active");

        // Get the elements
        var from_input = $('.start-date input[type=text]').pickadate(),
            from_picker = from_input.pickadate('picker');
        var to_input = $('.end-date input[type=text]').pickadate(),
            to_picker = to_input.pickadate('picker');

        // Check if there’s a “from” or “to” date to start with and if so, set their appropriate properties.
        if (from_picker.get('value')) {
            to_picker.set('min', from_picker.get('select'));
        }
        if (to_picker.get('value')) {
            from_picker.set('max', to_picker.get('select'));
        }

        // Apply event listeners in case of setting new “from” / “to” limits to have them update on the other end. If ‘clear’ button is pressed, reset the value.
        from_picker.on('set',
            function (event) {
                if (event.select) {
                    to_picker.set('min', from_picker.get('select'));
                } else if ('clear' in event) {
                    to_picker.set('min', false);
                }
            });
        to_picker.on('set',
            function (event) {
                if (event.select) {
                    from_picker.set('max', to_picker.get('select'));
                } else if ('clear' in event) {
                    from_picker.set('max', false);
                }
            });
    });
</script>
@Html.DeleteConfirmation("classdivision-delete")
